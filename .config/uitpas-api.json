{
  "openapi": "3.0.0",
  "info": {
    "title": "UiTPAS API",
    "version": "4.0",
    "contact": {
      "name": "publiq helpdesk",
      "email": "technical-support@publiq.be",
      "url": "https://docs.publiq.be"
    },
    "description": "With UiTPAS API 4.0 you can retrieve ticket prices and register ticket sales for passholders. You can also save UiTPAS points and exchange them for rewards for a passholder, and much more."
  },
  "servers": [
    {
      "url": "https://api-test.uitpas.be",
      "description": "Testing"
    },
    {
      "url": "https://api.uitpas.be",
      "description": "Production"
    }
  ],
  "tags": [
    {
      "name": "Card Systems"
    },
    {
      "name": "Current Passholder"
    },
    {
      "name": "Events"
    },
    {
      "name": "Financial reports"
    },
    {
      "name": "Organizers"
    },
    {
      "name": "Passholders"
    },
    {
      "name": "Permissions"
    },
    {
      "name": "Rewards"
    },
    {
      "name": "Schools"
    },
    {
      "name": "Ticket sales"
    },
    {
      "name": "UiTiD"
    }
  ],
  "paths": {
    "/tariffs": {
      "parameters": [],
      "get": {
        "summary": "Get tariffs",
        "tags": [
          "Ticket sales"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TariffsResponse"
                },
                "examples": {
                  "Single tariff example": {
                    "value": {
                      "available": [
                        {
                          "id": "SOCIALTARIFF-1",
                          "name": "Kansentarief",
                          "price": 1.5,
                          "type": "SOCIALTARIFF",
                          "remaining": 1
                        }
                      ]
                    }
                  },
                  "Multiple tariffs example": {
                    "value": {
                      "available": [
                        {
                          "id": "SOCIALTARIFF-1",
                          "name": "Kansentarief",
                          "price": 1.5,
                          "remaining": 1,
                          "type": "SOCIALTARIFF"
                        },
                        {
                          "id": "COUPON1234",
                          "name": "Cultuurbon 6 euro",
                          "price": 4,
                          "remaining": 1,
                          "type": "COUPON"
                        },
                        {
                          "id": "COUPON2345",
                          "name": "2 euro korting op een specifiek event",
                          "price": 8,
                          "remaining": 1,
                          "type": "COUPON"
                        },
                        {
                          "id": "REWARD5464",
                          "name": "50% korting op een specifiek event",
                          "price": 5,
                          "remaining": 1,
                          "type": "REWARD"
                        }
                      ]
                    }
                  },
                  "Single tariff with multiple number of tickets": {
                    "value": {
                      "available": [
                        {
                          "id": "SOCIALTARIFF",
                          "name": "Kansentarief",
                          "price": 1.5,
                          "remaining": 20,
                          "type": "SOCIALTARIFF"
                        }
                      ]
                    }
                  },
                  "Example with reward tariff": {
                    "value": {
                      "available": [
                        {
                          "id": "REWARD5464",
                          "name": "50% korting voor 10 UiTPAS punten",
                          "price": 5,
                          "remaining": 1,
                          "type": "REWARD"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. The response will include a JSON body with more details in the form of a RFC7807 error model. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/event-not-found\n* https://api.publiq.be/probs/uitpas/passholder-not-found\n* https://api.publiq.be/probs/uitpas/passholder-no-active-cardsystems\n* https://api.publiq.be/probs/uitpas/social-tariff-expired\n* https://api.publiq.be/probs/uitpas/invalid-uitpasnumber\n* https://api.publiq.be/probs/uitpas/invalid-card\n* https://api.publiq.be/probs/uitpas/invalid-card-status\n\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Event not found": {
                    "value": {
                      "type": "https://api.publiq.be/probs/uitpas/event-not-found",
                      "title": "Event id 267B6FCF-46F8-4DA2-8D7D-AADCD2C2715E not found",
                      "status": 400
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "operationId": "get-tariffs",
        "description": "Returns the possible UiTPAS discounted **tariffs for an event and a passholder**.\n\nThis UiTPAS tariffs are calculated based on:\n\n- **The regular price** of the ticket.\nThis is the price your user would have to pay for the specific ticket without UiTPAS discount.\n- **The UiTPAS number** of the passholder. UiTPAS discounts are personal so it's important to identify the passholder to retrieve a list of possible tariffs.\n- **The event id** of the UiTdatabank event. UiTPAS discounts are limited to specific UiTdatabank events, so it's important to specify the event id to retrieve a list of possible tariffs.\n\n> ##### Important\n> The regular price of the ticket should generally be one of the price categories set on the event in UiTdatabank to make financial reporting clearer.\n\nThe caller of this request must have `TARIFFS_READ` permission for the organizer of the given event.",
        "security": [
          {
            "USER_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          },
          {
            "CLIENT_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "regularPrice",
            "description": "The regular price the passholder would have to pay for the ticket if they are not eligible for discounts",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "eventId",
            "description": "The id of the event for which the ticket is sold",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "uitpasNumber",
            "description": "UiTPAS Number identifying the passholder who wants to buy a ticket",
            "required": true
          }
        ]
      }
    },
    "/ticket-sales": {
      "parameters": [],
      "post": {
        "summary": "Register ticket sale(s)",
        "tags": [
          "Ticket sales"
        ],
        "operationId": "post-ticket-sales",
        "responses": {
          "200": {
            "description": "Ticket sale registration(s) succeeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TicketSale"
                  }
                },
                "examples": {
                  "Single ticket sale example": {
                    "value": [
                      {
                        "id": "21345",
                        "tariff": {
                          "id": "COUPON1234",
                          "name": "Cultuurbon 6 euro",
                          "price": 1.5,
                          "type": "COUPON"
                        },
                        "uitpasNumber": "0560002524314",
                        "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                        "regularPrice": 10,
                        "regularPriceLabel": "Optional descriptive label of the regular price. Used in financial reporting."
                      }
                    ]
                  },
                  "Multiple ticket sales example": {
                    "value": [
                      {
                        "id": "21345",
                        "tariff": {
                          "id": "COUPON1234",
                          "name": "Cultuurbon 6 euro",
                          "price": 4,
                          "type": "COUPON"
                        },
                        "uitpasNumber": "0560002524314",
                        "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                        "regularPrice": 10,
                        "regularPriceLabel": "Optional descriptive label of the regular price. Used in financial reporting."
                      },
                      {
                        "id": "21346",
                        "tariff": {
                          "id": "SOCIALTARIFF",
                          "name": "Kansentarief",
                          "price": 1.5,
                          "type": "SOCIALTARIFF"
                        },
                        "uitpasNumber": "0940002524123",
                        "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                        "regularPrice": 10,
                        "regularPriceLabel": "Optional descriptive label of the regular price. Used in financial reporting."
                      }
                    ]
                  },
                  "Example using a reward tariff": {
                    "value": [
                      {
                        "id": "489144",
                        "tariff": {
                          "id": "REWARD1234",
                          "name": "50% korting voor 10 punten",
                          "price": 5,
                          "type": "REWARD"
                        },
                        "uitpasNumber": "0560002524314",
                        "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                        "regularPrice": 10
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/body/missing\n* https://api.publiq.be/probs/body/invalid-syntax\n* https://api.publiq.be/probs/body/invalid-data\n* https://api.publiq.be/probs/uitpas/social-tariff-expired\n* https://api.publiq.be/probs/uitpas/maximum-reached\n* https://api.publiq.be/probs/uitpas/invalid-number-of-tickets\n* https://api.publiq.be/probs/uitpas/event-not-found\n* https://api.publiq.be/probs/uitpas/passholder-not-found\n* https://api.publiq.be/probs/uitpas/invalid-uitpasnumber\n* https://api.publiq.be/probs/uitpas/invalid-card\n* https://api.publiq.be/probs/uitpas/invalid-card-status\n* https://api.publiq.be/probs/uitpas/passholder-no-active-cardsystems\n* https://api.publiq.be/probs/uitpas/invalid-coupon\n\n\nThe type indicates the error on one of the failed ticket sale registrations. All other ticket sale registration in the request will be rolled back in case of an error.\n\nThe property `jsonPointer` will a referene to the erroneous `TicketSaleRequest` object if applicable.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Social tariff discount expired": {
                    "value": {
                      "type": "https://api.publiq.be/probs/uitpas/social-tariff-discount-expired",
                      "title": "Social tariff discount expired",
                      "status": 400
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "description": "Registers one or more new ticket sales **with a discounted UiTPAS tariff**, so the UiTPAS organiser can get reimbursed for the discount.\n\nBefore you can register a discounted ticket sale, you will need to request the possible discounted tariffs from the `GET /tariffs` endpoint and let your end user pick one of the available tariffs. Afterward, you can register a ticket sale using this endpoint. \n\nYou will need:\n\n- The `uitpasNumber` of the passholder buying the ticket.\n- The `eventId` of the UiTdatabank event.\n- The chosen `tariff` from the `GET /tariffs` request. (only the `id` is required)\n- The `regularPrice` the passholder would normally have to pay for this ticket\n\nOptionally you can include:\n- a `regularPriceLabel` describing the regular price if you have multiple price \ncategories, which can be useful in the financial reporting overview.\n\nIf you want to register more than one ticket sale for the same passholder, for the same event, at the same tariff, use multiple `TicketSale` objects in this request. Do note this is only possible if `remaining` was higher than one in the `GET /tariffs` request.\n\nThe `passholder` field of `TicketSale` is ignored in the request body. It is included in the response if applicable (passholder can be empty in some cases, e.g. for group passes), but only if the caller of this request has `PASSHOLDER_SEARCH` permission.\n\n<!-- theme: warning -->\n\n> ##### Error handling\n> **If one of the ticket sales is invalid** (for example the chosen tariff is incorrect or expired), **none of the ticket sales will be registered**. You will instead get an error response with more details about the problem, and can then retry the registration without the incorrect ticket sales or ask the end user to change the tickets and/or tariffs that they want.\n\nThe caller of this request must have `TICKETSALE_REGISTER`  permission for the organizer of the given event.\n",
        "security": [
          {
            "USER_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          },
          {
            "CLIENT_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TicketSale"
                }
              },
              "examples": {
                "Example for one ticket sale": {
                  "value": [
                    {
                      "tariff": {
                        "id": "COUPON1234"
                      },
                      "uitpasNumber": "0560002524314",
                      "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                      "regularPrice": 10,
                      "regularPriceLabel": "Optional descriptive label of the regular price. Used in financial reporting."
                    }
                  ]
                },
                "Example for multiple ticket sales": {
                  "value": [
                    {
                      "tariff": {
                        "id": "COUPON1234"
                      },
                      "uitpasNumber": "0560002524314",
                      "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                      "regularPrice": 10,
                      "regularPriceLabel": "Base tariff"
                    },
                    {
                      "tariff": {
                        "id": "SOCIALTARIFF"
                      },
                      "uitpasNumber": "0930002523422",
                      "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                      "regularPrice": 10,
                      "regularPriceLabel": "Base tariff"
                    },
                    {
                      "tariff": {
                        "id": "REWARD21343"
                      },
                      "uitpasNumber": "0985002524385",
                      "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                      "regularPrice": 10
                    }
                  ]
                },
                "Example for multiple ticket sales at the same tariff": {
                  "value": [
                    {
                      "uitpasNumber": "0560002524314",
                      "tariff": {
                        "id": "SOCIALTARIFF"
                      },
                      "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                      "regularPrice": 10,
                      "regularPriceLabel": "Optional descriptive label of the regular price. Used in financial reporting."
                    },
                    {
                      "uitpasNumber": "0560002524314",
                      "tariff": {
                        "id": "SOCIALTARIFF"
                      },
                      "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                      "regularPrice": 10,
                      "regularPriceLabel": "Optional descriptive label of the regular price. Used in financial reporting."
                    },
                    {
                      "uitpasNumber": "0560002524314",
                      "tariff": {
                        "id": "SOCIALTARIFF"
                      },
                      "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                      "regularPrice": 10,
                      "regularPriceLabel": "Optional descriptive label of the regular price. Used in financial reporting."
                    },
                    {
                      "uitpasNumber": "0560002524314",
                      "tariff": {
                        "id": "SOCIALTARIFF"
                      },
                      "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                      "regularPrice": 10,
                      "regularPriceLabel": "Optional descriptive label of the regular price. Used in financial reporting."
                    },
                    {
                      "uitpasNumber": "0560002524314",
                      "tariff": {
                        "id": "SOCIALTARIFF"
                      },
                      "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                      "regularPrice": 10,
                      "regularPriceLabel": "Optional descriptive label of the regular price. Used in financial reporting."
                    }
                  ]
                },
                "Example using a reward tariff": {
                  "value": [
                    {
                      "tariff": {
                        "id": "REWARD1234"
                      },
                      "uitpasNumber": "0560002524314",
                      "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                      "regularPrice": 10
                    }
                  ]
                }
              }
            }
          },
          "description": "One or more new ticket sales to register."
        }
      },
      "get": {
        "summary": "Retrieve existing ticket sales",
        "tags": [
          "Ticket sales"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TicketSalesPaginatedResponse"
                },
                "examples": {
                  "Example without passholder (default)": {
                    "value": {
                      "totalItems": 2,
                      "member": [
                        {
                          "id": "21345",
                          "tariff": {
                            "id": "COUPON1234",
                            "name": "Cultuurbon 6 euro",
                            "price": 4,
                            "type": "COUPON"
                          },
                          "uitpasNumber": "0560002524314",
                          "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                          "regularPrice": 10,
                          "regularPriceLabel": "Optional descriptive label of the regular price. Used in financial reporting."
                        },
                        {
                          "id": "21346",
                          "tariff": {
                            "id": "COUPON1234",
                            "name": "Cultuurbon 6 euro",
                            "price": 1.5,
                            "type": "COUPON"
                          },
                          "uitpasNumber": "0560002524314",
                          "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                          "regularPrice": 10,
                          "regularPriceLabel": "Optional descriptive label of the regular price. Used in financial reporting."
                        }
                      ]
                    }
                  },
                  "Example with passholder (PASSHOLDER_SEARCH permission required)": {
                    "value": {
                      "totalItems": 2,
                      "member": [
                        {
                          "id": "21345",
                          "tariff": {
                            "id": "COUPON1234",
                            "name": "Cultuurbon 6 euro",
                            "price": 4,
                            "type": "COUPON"
                          },
                          "uitpasNumber": "0560002524314",
                          "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                          "regularPrice": 10,
                          "regularPriceLabel": "Optional descriptive label of the regular price. Used in financial reporting.",
                          "passholder": {
                            "id": "1be0fb53-0695-405b-ac09-deafead650af",
                            "name": "Peeters",
                            "firstName": "Marc",
                            "inszNumber": "00000009007",
                            "dateOfBirth": "2000-01-01",
                            "postalCode": "9300",
                            "address": {
                              "postalCode": "9300",
                              "city": "Aalst"
                            },
                            "creationDate": "2012-08-24T14:15:22Z",
                            "registrationOrganizer": {
                              "id": "1234",
                              "name": "Example UiTPAS Organizer"
                            },
                            "points": 10,
                            "uitidStatus": "UNREGISTERED",
                            "cardSystemMemberships": [
                              {
                                "cardSystem": {
                                  "id": 12,
                                  "name": "UiTPAS Oostende",
                                  "branding": {
                                    "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
                                    "primaryColor": "rgba(0,0,0,1.0)",
                                    "secondaryColor": "rgba(97,166,14,1.0)"
                                  },
                                  "links": {
                                    "website": "https://www.uitpas.be"
                                  },
                                  "cities": [
                                    {
                                      "postalCode": "8400",
                                      "name": "Oostende"
                                    }
                                  ],
                                  "permanent": true
                                },
                                "uitpasNumber": "0930012345615",
                                "status": "ACTIVE",
                                "socialTariff": {
                                  "endDate": "2022-08-24T14:15:22Z",
                                  "inGracePeriod": false,
                                  "expired": false
                                }
                              }
                            ]
                          }
                        },
                        {
                          "id": "21346",
                          "tariff": {
                            "id": "COUPON1234",
                            "name": "Cultuurbon 6 euro",
                            "price": 1.5,
                            "type": "COUPON"
                          },
                          "uitpasNumber": "0560002524314",
                          "eventId": "31e926e2-a35f-11eb-bcbc-0242ac130002",
                          "regularPrice": 10,
                          "regularPriceLabel": "Optional descriptive label of the regular price. Used in financial reporting.",
                          "passholder": {
                            "id": "1be0fb53-0695-405b-ac09-deafead650af",
                            "name": "Peeters",
                            "firstName": "Marc",
                            "inszNumber": "00000009007",
                            "dateOfBirth": "2000-01-01",
                            "postalCode": "9300",
                            "address": {
                              "postalCode": "9300",
                              "city": "Aalst"
                            },
                            "creationDate": "2012-08-24T14:15:22Z",
                            "registrationOrganizer": {
                              "id": "1234",
                              "name": "Example UiTPAS Organizer"
                            },
                            "points": 10,
                            "uitidStatus": "UNREGISTERED",
                            "cardSystemMemberships": [
                              {
                                "cardSystem": {
                                  "id": 12,
                                  "name": "UiTPAS Oostende",
                                  "branding": {
                                    "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
                                    "primaryColor": "rgba(0,0,0,1.0)",
                                    "secondaryColor": "rgba(97,166,14,1.0)"
                                  },
                                  "links": {
                                    "website": "https://www.uitpas.be"
                                  },
                                  "cities": [
                                    {
                                      "postalCode": "8400",
                                      "name": "Oostende"
                                    }
                                  ],
                                  "permanent": true
                                },
                                "uitpasNumber": "0930012345615",
                                "status": "ACTIVE",
                                "socialTariff": {
                                  "endDate": "2022-08-24T14:15:22Z",
                                  "inGracePeriod": false,
                                  "expired": false
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "operationId": "get-ticket-sales",
        "description": "Retrieve ticket sales based on search parameters.\n\nThe caller of this request must have `TICKETSALE_SEARCH` permission for the organizer of the given event.\n\nThe `passholder` is included in the response if applicable (passholder can be empty in some cases, e.g. for group passes), and only if the caller of this request has PASSHOLDER_SEARCH permission.",
        "security": [
          {
            "USER_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          },
          {
            "CLIENT_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "eventId",
            "description": "The ID of the UiTdatabank event.",
            "required": true
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ]
      }
    },
    "/ticket-sales/{ticketSaleId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "ticketSaleId",
          "in": "path",
          "required": true,
          "description": "Id of the previously registered ticket sale"
        }
      ],
      "delete": {
        "summary": "Cancel a ticket sale registration",
        "operationId": "delete-ticket-sales",
        "responses": {
          "204": {
            "description": "No content. The ticket sale was successfully canceled."
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Ticket Sale not found": {
                    "value": {
                      "type": "https://api.publiq.be/probs/uitpas/ticket-sale-not-found",
                      "title": "Ticket sale not found",
                      "status": 404
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Cancels a single ticket sale registration by its id. (Returned in the response of the ticket sale registration request.)\n\nThe caller of this request must have `TICKETSALE_REGISTER` permission for the organizer of the event of the ticketsale.",
        "tags": [
          "Ticket sales"
        ],
        "security": [
          {
            "USER_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          },
          {
            "CLIENT_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          }
        ]
      }
    },
    "/permissions": {
      "get": {
        "summary": "Get permissions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizerPermissions"
                  }
                },
                "examples": {
                  "Example with multiple organizers": {
                    "value": [
                      {
                        "organizer": {
                          "id": "c097fa2e-d9be-42e6-b41a-ec3d4d4cbad1",
                          "name": "CC De Werf"
                        }
                      },
                      {
                        "organizer": {
                          "id": "fd7e6177-4add-4fa8-a7fe-6e60127bfb35",
                          "name": "CC De Schakel"
                        }
                      }
                    ]
                  },
                  "Example with one organizer": {
                    "value": [
                      {
                        "organizer": {
                          "id": "c097fa2e-d9be-42e6-b41a-ec3d4d4cbad1",
                          "name": "CC De Werf"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "operationId": "get-permissions",
        "description": "Lists the organizers that the current user or client (depending on the token) has access to. The possible permissions on each organizer can also differ (will be added later).",
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          },
          {
            "CLIENT_ACCESS_TOKEN": []
          }
        ],
        "tags": [
          "Permissions"
        ]
      },
      "parameters": []
    },
    "/events/{eventId}/card-systems": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "eventId",
          "in": "path",
          "required": true,
          "description": "The id of the event"
        }
      ],
      "put": {
        "summary": "Update event card systems",
        "operationId": "put-events-card-systems",
        "responses": {
          "204": {
            "description": "EventCardSytems updated. No content."
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/body/missing\n* https://api.publiq.be/probs/body/invalid-syntax\n* https://api.publiq.be/probs/body/invalid-data\n* https://api.publiq.be/probs/uitpas/invalid-card-system\n* https://api.publiq.be/probs/uitpas/cardsystem-not-found\n* https://api.publiq.be/probs/uitpas/distributionkey-not-found\n* https://api.publiq.be/probs/uitpas/invalid-distributionkey\n* https://api.publiq.be/probs/uitpas/event-already-has-ticketsales\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/event-not-found\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "List of all possible (enabled and disabled) EventCardSystem objects",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventCardSystem"
                }
              },
              "examples": {
                "Example": {
                  "value": [
                    {
                      "id": 1,
                      "enabled": true,
                      "manualDistributionKeys": [
                        {
                          "id": 123,
                          "enabled": true
                        }
                      ]
                    },
                    {
                      "id": 8,
                      "enabled": false
                    }
                  ]
                }
              }
            }
          },
          "description": "New list of card systems that an event is related to. Will overwrite the old list."
        },
        "description": "Update the `EventCardSystem` objects of the given event.\n\nThe `EventCardSystem` object specifies that the event is available in\nthis specific card system and optionally what manual distribution keys are enabled.\n\nThis update is used to toggle the `enabled` state for specific card systems or distribution keys.\n\nTo update the `enabled` state, you MUST retrieve the possible `EventCardSystem` objects first using  `GET /events/{eventId}/card-systems`. \nNote that you can reuse the response from the `GET` request, \naltering the `enabled` state, or you can also omit the name properties. \nOnly the required fields are used in this update request.\n\n<!-- theme: warning -->\n\n> **This endpoint is only needed for exceptional cases.** In most cases card systems and distribution keys are set automatically on events, so you don't need to retrieve or change them.\n\nThe caller of this request must have `EVENTS_UPDATE` permission for the organizer of this event.\n",
        "security": [
          {
            "USER_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          },
          {
            "CLIENT_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          }
        ],
        "tags": [
          "Events"
        ]
      },
      "get": {
        "summary": "Get event card systems",
        "operationId": "get-events-card-systems",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventCardSystem"
                  }
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "id": 1,
                        "name": "UiTPAS Dender",
                        "enabled": true,
                        "manualDistributionKeys": [
                          {
                            "id": 123,
                            "name": "3 euro per dag",
                            "enabled": true
                          }
                        ]
                      },
                      {
                        "id": 8,
                        "name": "UiTPAS Gent",
                        "enabled": true
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/event-not-found\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "description": "Get all (enabled and disabled) `EventCardSystem` objects of the given event.\n\nThe `EventCardSystem` object specifies that the event is available in\nthis specific card system and optionally what manual distribution keys are enabled.\n\nEvery `EventCardSystem` or `ManualDistributionKey` has an `enabled` property that can be altered using `PUT /events/{eventId}/card-systems`.\n \n<!-- theme: warning -->\n\n> **This endpoint is only needed for exceptional cases.** In most cases card systems and distribution keys are set automatically on events, so you don't need to retrieve or change them.\n\nThe caller of this request must have `EVENTS_READ` permission for the organizer of this event.\n",
        "security": [
          {
            "USER_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          },
          {
            "CLIENT_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          }
        ],
        "tags": [
          "Events"
        ]
      }
    },
    "/organizers": {
      "get": {
        "summary": "Get organizers",
        "tags": [
          "Organizers"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizersPaginatedResponse"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/group-not-found\n* https://api.publiq.be/probs/uitpas/cardsystem-not-found\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "operationId": "get-organizers",
        "description": "Retrieve organizers based on search parameters.\n\nThe caller of this request must have `ORGANIZER_SEARCH` permission for the given organizer.",
        "security": [
          {
            "USER_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          },
          {
            "CLIENT_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "groupId",
            "description": "Include only organizers in this group"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Include only organizers with this name (* wildcard allowed)"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "cardSystemId",
            "description": "Include only organizers linked to this card system"
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "sort[name]",
            "description": "Sorts the organizers by their name in ascending or descending order."
          }
        ]
      }
    },
    "/passholders": {
      "get": {
        "summary": "Search passholders",
        "tags": [
          "Passholders"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PassholdersPaginatedResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "totalItems": 1,
                      "member": [
                        {
                          "id": "1be0fb53-0695-405b-ac09-deafead650af",
                          "name": "Peeters",
                          "firstName": "Marc",
                          "inszNumber": "00000009007",
                          "dateOfBirth": "2000-01-01",
                          "postalCode": "9300",
                          "address": {
                            "postalCode": "9300",
                            "city": "Aalst"
                          },
                          "creationDate": "2012-08-24T14:15:22Z",
                          "registrationOrganizer": {
                            "id": "1234",
                            "name": "Example UiTPAS Organizer"
                          },
                          "points": 10,
                          "uitidStatus": "UNREGISTERED",
                          "cardSystemMemberships": [
                            {
                              "cardSystem": {
                                "id": 12,
                                "name": "UiTPAS Oostende",
                                "branding": {
                                  "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
                                  "primaryColor": "rgba(0,0,0,1.0)",
                                  "secondaryColor": "rgba(97,166,14,1.0)"
                                },
                                "links": {
                                  "website": "https://www.uitpas.be"
                                },
                                "cities": [
                                  {
                                    "postalCode": "8400",
                                    "name": "Oostende"
                                  }
                                ],
                                "permanent": true
                              },
                              "uitpasNumber": "0930012345615",
                              "status": "ACTIVE",
                              "socialTariff": {
                                "endDate": "2022-08-24T14:15:22Z",
                                "inGracePeriod": false,
                                "expired": false
                              }
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/organizer-not-found\n* https://api.publiq.be/probs/uitpas/invalid-uitpas-number\n* https://api.publiq.be/probs/uitpas/invalid-insz-number\n* https://api.publiq.be/probs/uitpas/school-not-found\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "operationId": "get-passholders",
        "description": "Retrieve passholders based on search parameters.\n\nNote: by default passholders in the response are alphabetically sorted by name.\n\nThe caller of this request must have `PASSHOLDER_SEARCH` permission.",
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          },
          {
            "CLIENT_ACCESS_TOKEN": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "inszNumber",
            "description": "Unique national (Belgian) INSZ number of an individual passholder to look up."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "uitpasNumber",
            "description": "Unique UiTPAS number of an individual passholder to look up."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "chipNumber",
            "description": "Hexadecimal notation of the chip number of an individual UiTPAS card."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Complete or partial last name of a passholder to look up."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "firstName",
            "description": "Complete or partial first name of a passholder to look up."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "schoolId",
            "description": "Organizer ID of a school, to only return passholders linked to a specific school. Use `*` to return passholders that are linked to any school. Note: Only used in very specific cases for educational integrations."
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "sort[name]",
            "description": "Sorts the passholders by their last name in ascending or descending order. By default passholders are sorted by name, ascending order."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "organizerId",
            "description": "A specific organizer ID to only return passholders that are linked to a card system related to this organizer. If omitted, the results will return passholders linked to the organizers you have permission to access."
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "dateOfBirthFrom",
            "description": "Returns only passholders with a date of birth of this value (including) or more recent. Format `yyyy-mm-dd`, e.g. `2003-01-01`"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "dateOfBirthTo",
            "description": "Returns only passholders with a date of birth of this value (including) or older. Format `yyyy-mm-dd`, e.g. `2003-01-01`"
          }
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Register a new passholder",
        "operationId": "post-passholders",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Passholder"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "1be0fb53-0695-405b-ac09-deafead650af",
                      "name": "Peeters",
                      "firstName": "Marc",
                      "inszNumber": "00000009007",
                      "dateOfBirth": "2000-01-01",
                      "postalCode": "9300",
                      "address": {
                        "postalCode": "9300",
                        "city": "Aalst"
                      },
                      "creationDate": "2012-08-24T14:15:22Z",
                      "registrationOrganizer": {
                        "id": "1234",
                        "name": "Example UiTPAS Organizer"
                      },
                      "points": 10,
                      "uitidStatus": "UNREGISTERED",
                      "cardSystemMemberships": [
                        {
                          "cardSystem": {
                            "id": 12,
                            "name": "UiTPAS Oostende",
                            "branding": {
                              "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
                              "primaryColor": "rgba(0,0,0,1.0)",
                              "secondaryColor": "rgba(97,166,14,1.0)"
                            },
                            "links": {
                              "website": "https://www.uitpas.be"
                            },
                            "cities": [
                              {
                                "postalCode": "8400",
                                "name": "Oostende"
                              }
                            ],
                            "permanent": true
                          },
                          "uitpasNumber": "0930012345615",
                          "status": "ACTIVE",
                          "socialTariff": {
                            "endDate": "2022-08-24T14:15:22Z",
                            "inGracePeriod": false,
                            "expired": false
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possible error types:\n\n* https://api.publiq.be/probs/body/missing\n* https://api.publiq.be/probs/body/invalid-syntax\n* https://api.publiq.be/probs/body/invalid-data\n* https://api.publiq.be/probs/uitpas/organizer-not-found\n* https://api.publiq.be/probs/uitpas/cardsystem-not-found\n* https://api.publiq.be/probs/uitpas/invalid-city\n* https://api.publiq.be/probs/uitpas/invalid-insz-number\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "description": "<!-- theme: warning -->\n\n> WARNING\n>\n> Experimental API. Breaking changes might be introduced in future updates.\n\nRegister a passholder\n\nThe caller of this request must have `PASSHOLDER_WRITE` permission for the `registrationOrganizer`.",
        "security": [
          {
            "CLIENT_ACCESS_TOKEN": []
          },
          {
            "USER_ACCESS_TOKEN": []
          }
        ],
        "requestBody": {
          "description": "Details of the new passholder to register.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Passholder"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Peeters",
                    "firstName": "Marc",
                    "inszNumber": "00000009007",
                    "email": "marc.peeters@example.com",
                    "dateOfBirth": "2000-01-01",
                    "registrationOrganizer": {
                      "id": "abc12345"
                    },
                    "address": {
                      "street": "Grote markt",
                      "number": "12",
                      "box": "",
                      "postalCode": "9300",
                      "city": "Aalst",
                      "country": "be"
                    },
                    "optInPreferences": {
                      "serviceMails": true,
                      "infoMails": true,
                      "milestoneMails": true,
                      "sms": false,
                      "post": true
                    },
                    "nationality": "Belg",
                    "legalConsentPaper": false,
                    "legalConsentDigital": true,
                    "parentalConsent": false,
                    "registrationCardSystemId": 1
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Passholders"
        ]
      }
    },
    "/passholders/{passholderId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/passholderId"
        }
      ],
      "delete": {
        "summary": "Remove passholder",
        "operationId": "delete-passholders-passholderId",
        "tags": [
          "Passholders"
        ],
        "description": "Remove this passholder.\n\nThe caller of this request must have `PASSHOLDER_DELETE` permission.",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          },
          {
            "CLIENT_ACCESS_TOKEN": []
          }
        ]
      }
    },
    "/passholders/me/uitid/registration-token": {
      "parameters": [],
      "get": {
        "summary": "Retrieve UiTiD registration token",
        "operationId": "get-uitid-passholder-registration-token",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "UiTPAS number of the validated passholder"
                    }
                  },
                  "required": [
                    "token"
                  ],
                  "readOnly": true
                },
                "examples": {
                  "Example": {
                    "value": {
                      "token": "4f5ac68b-e85a-4c38-ad8c-a07a253ed692"
                    }
                  }
                }
              }
            },
            "description": "OK\n\nThe passholder can proceed UiTiD registration."
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "description": "Too Many Requests\n\nPossible error types:\n\n* https://api.publiq.be/probs/uitpas/rate-limited\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "type": "https://api.publiq.be/probs/uitpas/rate-limited",
                      "title": "Rate limited",
                      "status": 429,
                      "detail": "Rate limited"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "This is step 1 of the process to register an UiTPAS passholder in UiTiD using their UiTPAS number and date of birth. It is used to retrieve an UiTiD registration token for the passholder. If the passholder already has a token via an email they received to register in UiTiD, this step can be skipped.\n\nThis endpoint uses HTTP Basic Authentication using:\n* Username: uitpasNumber \n* Password: dateOfBirth in the form yyyy-mm-dd\n\nIn summary, this header should look like: \n\n```\nAuthorization: Basic base64(uitpasNumber+dateOfBirth)\n```\n\nThe response will contain a `token` property that can be used in step 2 of the process, [retrieving the UiTiD registration status](/reference/uitpas.json/paths/~1passholders~1me~1uitid~1status/get).\n\nThis caller of this method is identified with [client identification](https://docs.publiq.be/docs/authentication/ZG9jOjExODE5NDY5-client-identification) and does not require any permissions, but please note this endpoint is rate-limited on IP address to prevent abuse.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "required": true,
            "name": "authorization",
            "description": "HTTP Basic auth using uitpasNumber as the username and dateOfBirth as password"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-client-id",
            "description": "API key identifying the calling client",
            "required": true
          }
        ],
        "tags": [
          "Current Passholder"
        ]
      }
    },
    "/passholders/me/uitid/status": {
      "parameters": [],
      "get": {
        "summary": "Retrieve UiTiD registration status",
        "operationId": "get-uitid-passholder-status",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uitpasNumber": {
                      "type": "string",
                      "description": "UiTPAS number of the validated passholder"
                    },
                    "email": {
                      "type": "string",
                      "description": "Optionally email address of the validated passholder"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "REGISTERED",
                        "UNREGISTERED"
                      ],
                      "description": "State of the passholder"
                    }
                  },
                  "required": [
                    "uitpasNumber",
                    "state"
                  ],
                  "readOnly": true
                },
                "examples": {
                  "Unregistered passholder without email": {
                    "value": {
                      "state": "UNREGISTERED",
                      "uitpasNumber": "0900000008301"
                    }
                  },
                  "Unregistered passholder including email": {
                    "value": {
                      "state": "UNREGISTERED",
                      "uitpasNumber": "0900000008301",
                      "email": "john@example.org"
                    }
                  },
                  "Registered passholder": {
                    "value": {
                      "state": "REGISTERED",
                      "uitpasNumber": "0900000008301",
                      "email": "john@example.org"
                    }
                  }
                }
              }
            },
            "description": "OK\n\nThe passholder can proceed UiTiD registration."
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "description": "Too Many Requests\n\nPossible error types:\n\n* https://api.publiq.be/probs/uitpas/rate-limited\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "type": "https://api.publiq.be/probs/uitpas/rate-limited",
                      "title": "Rate limited",
                      "status": 429,
                      "detail": "Rate limited"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrieves the UiTiD registration status of a passholder. This is step 2 in the process of registering an UiTPAS passholder in UiTiD.\n\nThis endpoint requires a registation token in the `x-registration-token` header. A client can obtain such a token using [`GET /passholders/me/uitid/registration-token`](/reference/uitpas.json/paths/~1passholders~1me~1uitid~1registration-token/get). Alternatively, a token may already be available to the client because the user may have received an email link including it.\n\nBased on the state value, the client can proceed in 2 ways:\n\n- If state is `UNREGISTERED`\n\nThe passholder can proceed to step 3, [retrieving the UiTiD email address status](/reference/uitpas.json/paths/~1uitid~1emails~1{email}/get).\n\nThe response can include the linked `email` address of the passholder if one is known. This can be used in the next step of the registration process ([`GET /uitid/emails/{email}`](/reference/uitpas.json/paths/~1uitid~1emails~1{email}/get)). If no email address is included, the client should prompt the user to enter their email address first before proceeding to step 3.\n\n- If state is `REGISTERED` \n\nThe passholder is already `REGISTERED` so the user must continue by authenticating instead. The `email` address field contains the email address of the linked UiTiD account that should be used to authenticate.\n\n\nThis caller of this method, identified with [client identification](https://docs.publiq.be/docs/authentication/ZG9jOjExODE5NDY5-client-identification) does not require any permissions.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "required": true,
            "name": "x-registration-token",
            "description": "the registration token of this passholder"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-client-id",
            "description": "API key identifying the calling client",
            "required": true
          }
        ],
        "tags": [
          "Current Passholder"
        ]
      }
    },
    "/uitid/emails/{email}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "email",
          "in": "path",
          "required": true,
          "description": "Email address the passholder wants to use to register"
        }
      ],
      "get": {
        "summary": "Retrieve UiTiD email address status",
        "operationId": "get-uitid-email",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "state": {
                      "type": "string",
                      "enum": [
                        "UITID_UNREGISTERED",
                        "UITID_REGISTERED",
                        "UITPAS_ALREADY_LINKED"
                      ],
                      "description": "* `UITPAS_ALREADY_LINKED` : the user cannot use this email address to register another UiTPAS\n* `UITID_UNREGISTERED` : the user can use this email address to register their UiTPAS but must register on UiTiD first\n* `UITID_REGISTERED` : the user can use this email address to register their UiTPAS but must login on UiTiD first"
                    }
                  },
                  "required": [
                    "state"
                  ],
                  "readOnly": true
                },
                "examples": {
                  "Example": {
                    "value": {
                      "state": "UITID_UNREGISTERED"
                    }
                  }
                }
              }
            },
            "description": "OK\n\nThe email address can be used to register the passholder."
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "description": "Too Many Requests\n\nPossible error types:\n\n* https://api.publiq.be/probs/uitpas/rate-limited\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "type": "https://api.publiq.be/probs/uitpas/rate-limited",
                      "title": "Rate limited",
                      "status": 429,
                      "detail": "Rate limited"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Retrieves the email address status in UiTPAS and UiTiD for a given email address. This is step 3 in the process of registering an UiTPAS passholder in UiTiD.\n\nThe response contains a `state` property which can be one of the following values:\n\n* `UITPAS_ALREADY_LINKED` : the user cannot use this email address to register another UiTPAS\n* `UITID_UNREGISTERED` : the user can use this email address to register their UiTPAS but must register on UiTiD first\n* `UITID_REGISTERED` : the user can use this email address to register their UiTPAS but must login on UiTiD first\n\nAfter [UiTiD authentication](https://docs.publiq.be/docs/authentication/ZG9jOjExODE5NTM5-user-access-token) the client should proceed to step 4 of the process, [registering UiTiD for the passholder](/reference/uitpas.json/paths/~1passholders~1me~1uitid/put).\n\nThis caller of this method, identified with [client identification](https://docs.publiq.be/docs/authentication/ZG9jOjExODE5NDY5-client-identification), does not require any permissions but please note this endpoint is rate-limited on IP address to prevent abuse.",
        "tags": [
          "UiTiD"
        ],
        "parameters": [],
        "security": [
          {
            "CLIENT_IDENTIFICATION": []
          },
          {
            "CLIENT_ACCESS_TOKEN": []
          },
          {
            "USER_ACCESS_TOKEN": []
          }
        ]
      }
    },
    "/passholders/membership-prices": {
      "get": {
        "summary": "Retrieve new membership prices",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MembershipPrice"
                  }
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "price": 5,
                        "cardSystem": {
                          "id": 12,
                          "name": "UiTPAS Oostende",
                          "branding": {
                            "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
                            "primaryColor": "rgba(0,0,0,1.0)",
                            "secondaryColor": "rgba(97,166,14,1.0)"
                          },
                          "links": {
                            "website": "https://www.uitpas.be"
                          },
                          "cities": [
                            {
                              "postalCode": "8400",
                              "name": "Oostende"
                            }
                          ],
                          "permanent": true
                        }
                      },
                      {
                        "price": 5,
                        "cardSystem": {
                          "id": 8,
                          "name": "UiTPAS Gent",
                          "branding": {
                            "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
                            "primaryColor": "rgba(0,0,0,1.0)",
                            "secondaryColor": "rgba(97,166,14,1.0)"
                          },
                          "links": {
                            "website": "https://www.uitpas.be"
                          },
                          "cities": [
                            {
                              "postalCode": "9000",
                              "name": "Gent"
                            },
                            {
                              "postalCode": "9050",
                              "name": "Gent-Brugge"
                            }
                          ],
                          "permanent": true
                        }
                      },
                      {
                        "price": 5,
                        "cardSystem": {
                          "id": 1,
                          "name": "UiTPAS Dender",
                          "branding": {
                            "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
                            "primaryColor": "rgba(0,0,0,1.0)",
                            "secondaryColor": "rgba(97,166,14,1.0)"
                          },
                          "links": {
                            "website": "https://www.uitpas.be"
                          },
                          "cities": [
                            {
                              "postalCode": "9300",
                              "name": "Aalst"
                            },
                            {
                              "postalCode": "9400",
                              "name": "Ninove"
                            }
                          ],
                          "permanent": true
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/invalid-postal-code\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {}
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "operationId": "get-passholders-passholderId-membership-prices",
        "description": "<!-- theme: warning -->\n\n> WARNING\n>\n> Experimental API. Breaking changes might be introduced in future updates.\n\nRetrieve the membership prices for a new passholder. All parameters are optional. If `postalCode` is specified, the most relevant price comes first.\n\nThe caller of this request must have `PRICE_READ` permission.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "postalCode",
            "description": "postal code of the residence of the user so the result is sorted on most nearby options first. Must be a valid Belgian postal code or `0000` for foreign places."
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "dateOfBirth",
            "description": "date of birth of the user used to determine the correct price. The default price is used when omitted."
          }
        ],
        "tags": [
          "Passholders"
        ],
        "security": [
          {
            "CLIENT_ACCESS_TOKEN": []
          },
          {
            "USER_ACCESS_TOKEN": []
          }
        ]
      },
      "parameters": []
    },
    "/passholders/{passholderId}/membership-prices": {
      "get": {
        "summary": "Retrieve upgrade membership prices",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MembershipPrice"
                  }
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "price": 5,
                        "cardSystem": {
                          "id": 12,
                          "name": "UiTPAS Oostende",
                          "branding": {
                            "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
                            "primaryColor": "rgba(0,0,0,1.0)",
                            "secondaryColor": "rgba(97,166,14,1.0)"
                          },
                          "links": {
                            "website": "https://www.uitpas.be"
                          },
                          "cities": [
                            {
                              "postalCode": "8400",
                              "name": "Oostende"
                            }
                          ],
                          "permanent": true
                        }
                      },
                      {
                        "price": 5,
                        "cardSystem": {
                          "id": 8,
                          "name": "UiTPAS Gent",
                          "branding": {
                            "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
                            "primaryColor": "rgba(0,0,0,1.0)",
                            "secondaryColor": "rgba(97,166,14,1.0)"
                          },
                          "links": {
                            "website": "https://www.uitpas.be"
                          },
                          "cities": [
                            {
                              "postalCode": "9000",
                              "name": "Gent"
                            },
                            {
                              "postalCode": "9050",
                              "name": "Gent-Brugge"
                            }
                          ],
                          "permanent": true
                        }
                      },
                      {
                        "price": 5,
                        "cardSystem": {
                          "id": 1,
                          "name": "UiTPAS Dender",
                          "branding": {
                            "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
                            "primaryColor": "rgba(0,0,0,1.0)",
                            "secondaryColor": "rgba(97,166,14,1.0)"
                          },
                          "links": {
                            "website": "https://www.uitpas.be"
                          },
                          "cities": [
                            {
                              "postalCode": "9300",
                              "name": "Aalst"
                            },
                            {
                              "postalCode": "9400",
                              "name": "Ninove"
                            }
                          ],
                          "permanent": true
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "operationId": "get-passholders-membership-prices",
        "description": "<!-- theme: warning -->\n\n> WARNING\n>\n> Experimental API. Breaking changes might be introduced in future updates.\n\nRetrieve the membership prices for an existing passholder. The result will contain only prices for cardsystems where the passholder is not already a member. The result will be sorted on most relevant price first.\n\nThe caller of this request must have `PASSHOLDER_READ` and `PRICE_READ` permission.",
        "parameters": [],
        "tags": [
          "Passholders"
        ],
        "security": [
          {
            "CLIENT_ACCESS_TOKEN": []
          },
          {
            "USER_ACCESS_TOKEN": []
          }
        ]
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/passholderId"
        }
      ]
    },
    "/passholders/me/uitid": {
      "parameters": [],
      "put": {
        "summary": "Register UiTiD for passholder",
        "operationId": "register-uitid-passholder",
        "responses": {
          "201": {
            "description": "Created. No Content."
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/passholder-already-registered\n* https://api.publiq.be/probs/uitpas/uitid-already-registered\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "description": "Registers the UiTiD for this passholder. This is step 4, and the final step, in the process of registering an UiTPAS passholder in UiTiD.\n\nThis request requires an `Authorization` header with the [user access token](https://docs.publiq.be/docs/authentication/ZG9jOjExODE5NTM5-user-access-token) of an authenticated UiTiD *and* it requires a `x-registration-token` header containing a valid registration token of the passholder.\n\nA user access token of a client with `PASSHOLDER_REGISTER_UITID` permission is mandatory.",
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-registration-token",
            "description": "the registration token of this passholder",
            "required": true
          }
        ],
        "tags": [
          "Current Passholder"
        ]
      }
    },
    "/passholders/me": {
      "get": {
        "summary": "Retrieve passholder for the current user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Passholder"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "1be0fb53-0695-405b-ac09-deafead650af",
                      "name": "Peeters",
                      "firstName": "Marc",
                      "inszNumber": "00000009007",
                      "dateOfBirth": "2000-01-01",
                      "postalCode": "9300",
                      "address": {
                        "postalCode": "9300",
                        "city": "Aalst"
                      },
                      "creationDate": "2012-08-24T14:15:22Z",
                      "registrationOrganizer": {
                        "id": "1234",
                        "name": "Example UiTPAS Organizer"
                      },
                      "points": 10,
                      "uitidStatus": "UNREGISTERED",
                      "cardSystemMemberships": [
                        {
                          "cardSystem": {
                            "id": 1,
                            "name": "UiTPAS Dender",
                            "branding": {
                              "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
                              "primaryColor": "rgba(0,0,0,1.0)",
                              "secondaryColor": "rgba(97,166,14,1.0)"
                            },
                            "links": {
                              "website": "https://www.uitpas.be"
                            },
                            "cities": [
                              {
                                "postalCode": "9300",
                                "name": "Aalst"
                              },
                              {
                                "postalCode": "9400",
                                "name": "Ninove"
                              }
                            ],
                            "permanent": true
                          },
                          "uitpasNumber": "0930012345615",
                          "status": "ACTIVE",
                          "socialTariff": {
                            "endDate": "2022-08-24T14:15:22Z",
                            "inGracePeriod": false,
                            "expired": false
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found\n\nIf the user does not have a passholder. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/passholder-not-found\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "get-passholders-me",
        "description": "Allows users to retrieve their passholder using a user access token.\n\nA user access token of a client with `PASSHOLDER_SELF_READ` permission is mandatory. The passholder is retrieved by `inszNumber` if the access token contains the custom claim `https://publiq.be/rrn` (i.e. user has logged in using connection ACM), or by linked UiTiD user (`sub` or `https://publiq.be/uitidv1id` claim of the user access token).",
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          }
        ],
        "parameters": [],
        "tags": [
          "Current Passholder"
        ]
      },
      "post": {
        "summary": "Register passholder for the current user",
        "operationId": "post-passholders-me",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Passholder"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "a1e0a6d9-7272-4214-b3bc-17d43f965b43",
                      "name": "Lastname",
                      "firstName": "Firstname",
                      "inszNumber": "19800101003",
                      "cardSystemMemberships": [
                        {
                          "cardSystem": {
                            "id": 27,
                            "name": "UiTPAS Dender",
                            "branding": {
                              "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
                              "primaryColor": "rgba(0,0,0,1.0)",
                              "secondaryColor": "rgba(97,166,14,1.0)"
                            },
                            "links": {
                              "website": "https://www.uitpas.be"
                            },
                            "cities": [
                              {
                                "postalCode": "9300",
                                "name": "Aalst"
                              },
                              {
                                "postalCode": "9400",
                                "name": "Ninove"
                              }
                            ],
                            "permanent": true
                          },
                          "uitpasNumber": "0999100000002",
                          "status": "ACTIVE"
                        }
                      ],
                      "postalCode": "9000",
                      "city": "Gent",
                      "uitidStatus": "UNREGISTERED",
                      "address": {
                        "postalCode": "9000",
                        "city": "Gent"
                      },
                      "email": "firstname.lastname@example.com",
                      "creationDate": "2021-10-15T09:50:51+00:00",
                      "dateOfBirth": "2000-08-24",
                      "registrationOrganizer": {
                        "id": "d2f898b1-455e-44ee-b08a-c4c05b1ab900",
                        "name": "UiTPAS Example organizer"
                      },
                      "points": 3
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possible error types:\n\n* https://api.publiq.be/probs/body/missing\n* https://api.publiq.be/probs/body/invalid-syntax\n* https://api.publiq.be/probs/body/invalid-data\n* https://api.publiq.be/probs/uitpas/insz-in-token-required\n* https://api.publiq.be/probs/uitpas/organizer-not-found\n* https://api.publiq.be/probs/uitpas/cardsystem-not-found\n* https://api.publiq.be/probs/uitpas/forbidden-underaged\n* https://api.publiq.be/probs/uitpas/invalid-city\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "description": "<!-- theme: warning -->\n\n> WARNING\n>\n> Experimental API. Breaking changes might be introduced in future updates.\n\nAllows users to self-register a passholder using a user access token.\n\nA user access token of a client with `PASSHOLDER_SELF_REGISTRATION` permission for the `registrationOrganizer` is mandatory. Furthermore, the user access token must contain the custom claim `https://publiq.be/rrn` (i.e. user has to login using connection ACM).\n\nPlease note a user can only self-register one passholder. Use `GET /passholders/me` to check if a passholder already exists for this user.",
        "requestBody": {
          "description": "Passholder details of the current user to register.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PassholderSelfRegistration"
              },
              "examples": {
                "Example": {
                  "value": {
                    "name": "Lastname",
                    "firstName": "Firstname",
                    "cardSystem": {
                      "id": 27
                    },
                    "email": "firstname.lastname@example.com",
                    "dateOfBirth": "1980-01-01",
                    "postalCode": "9000",
                    "city": "Gent",
                    "registrationOrganizer": {
                      "id": "d2f898b1-455e-44ee-b08a-c4c05b1ab900"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          }
        ],
        "tags": [
          "Current Passholder"
        ]
      },
      "parameters": []
    },
    "/passholders/me/checkins": {
      "post": {
        "summary": "Check in the current passholder",
        "operationId": "post-passholders-me-checkin",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "addedPoints": {
                      "type": "integer",
                      "description": "Newly added points as a result of this check-in"
                    },
                    "totalPoints": {
                      "description": "Total points of the passholder after this check-in",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "addedPoints",
                    "totalPoints"
                  ]
                },
                "examples": {
                  "Example": {
                    "value": {
                      "addedPoints": 1,
                      "totalPoints": 26
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possible error types:\n\n* https://api.publiq.be/probs/body/missing\n* https://api.publiq.be/probs/body/invalid-syntax\n* https://api.publiq.be/probs/body/invalid-data\n* https://api.publiq.be/probs/uitpas/checkin-code-expired\n* https://api.publiq.be/probs/uitpas/checkin-code-invalid\n* https://api.publiq.be/probs/uitpas/social-tariff-expired\n* https://api.publiq.be/probs/uitpas/passholder-not-found\n* https://api.publiq.be/probs/uitpas/passholder-no-active-cardsystems\n* https://api.publiq.be/probs/uitpas/checkin-not-allowed\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {}
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "429": {
            "description": "Too Many Requests\n\nPossible error types:\n\n* https://api.publiq.be/probs/uitpas/rate-limited\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "description": "Allows users to self check-in at an event using a user access token and a check-in code.\n\nA user access token of a passholder, authenticated via a client with `PASSHOLDER_SELF_CHECKIN` permission is mandatory.",
        "requestBody": {
          "description": "The check-in code of an event is typically presented to the user as a printed QR code or as a QR code displayed on a check-in device.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checkinCode": {
                    "type": "string",
                    "description": "Check-in code of the event."
                  }
                },
                "required": [
                  "checkinCode"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "checkinCode": "abcde123546"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          }
        ],
        "tags": [
          "Current Passholder"
        ]
      },
      "parameters": []
    },
    "/passholders/me/transactions": {
      "parameters": [],
      "get": {
        "summary": "Retrieve transaction history of the current passholder",
        "operationId": "get-passholders-me-transactions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionsPaginatedCollection"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "totalItems": 3,
                      "member": [
                        {
                          "title": "Gratis koffie",
                          "location": "Bibliotheek Oostende",
                          "creationDate": "2019-08-24T15:11:00Z",
                          "points": -4
                        },
                        {
                          "title": "Bezoek aan de bib",
                          "location": "Bibliotheek Oostende",
                          "creationDate": "2019-08-24T14:17:00Z",
                          "points": 1
                        },
                        {
                          "title": "Welkom bij UiTPAS",
                          "location": "Bibliotheek Oostende",
                          "creationDate": "2019-08-24T14:15:00Z",
                          "points": 3
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/passholder-not-found\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "description": "Retrieve the transaction history of the current passholder.\n\nA user access token of a passholder, authenticated via a client with `PASSHOLDER_TRANSACTION_HISTORY` permission is mandatory.",
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "in": "query",
            "name": "sort[creationDate]",
            "description": "Sorts the transactions by creationDate in ascending or descending order."
          }
        ],
        "tags": [
          "Current Passholder"
        ]
      }
    },
    "/passholders/{passholderId}/school": {
      "parameters": [
        {
          "$ref": "#/components/parameters/passholderId"
        }
      ],
      "get": {
        "summary": "Get passholder school",
        "operationId": "get-passholders-school",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organizer"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "9c47936c-bdee-11eb-8529-0242ac130003"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not found. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/passholder-not-found\n* https://api.publiq.be/probs/uitpas/school-not-found\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "description": "Retrieve the passholder's school.\n\nThe caller of this request must have `PASSHOLDER_SEARCH` permission.\n\n<!-- theme: warning -->\n\n> Passholder schools are used to manage passholders in a very specific case. If you are not explicitly working with UiTPAS schools, you will probably **NOT** need this API. \n\nUsing [GET](/reference/uitpas.json/paths/~1passholders~1{passholderId}~1school/get), [PUT](/reference/uitpas.json/paths/~1passholders~1{passholderId}~1school/put) and [DELETE](/reference/uitpas.json/paths/~1passholders~1{passholderId}~1school/delete) on this endpoint, the school of a passholder can be retrieved, updated and deleted. All schools are organizers.",
        "security": [
          {
            "USER_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          },
          {
            "CLIENT_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          }
        ],
        "tags": [
          "Schools"
        ]
      },
      "put": {
        "summary": "Update passholder school",
        "operationId": "put-passholders-school",
        "responses": {
          "204": {
            "description": "No Content. Update succeeded."
          },
          "400": {
            "description": "Bad request. Possible error types:\n\n* https://api.publiq.be/probs/body/missing\n* https://api.publiq.be/probs/body/invalid-syntax\n* https://api.publiq.be/probs/body/invalid-data\n* https://api.publiq.be/probs/uitpas/school-not-found\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not found. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/passholder-not-found\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "description": "Update the passholder's school relation.\n\nThe caller of this request must have `PASSHOLDER_UPDATE` permission.\n\n<!-- theme: warning -->\n\n> Passholder schools are used to manage passholders in a very specific case. If you are not explicitly working with UiTPAS schools, you will probably **NOT** need this API. \n\nUsing [GET](/reference/uitpas.json/paths/~1passholders~1{passholderId}~1school/get), [PUT](/reference/uitpas.json/paths/~1passholders~1{passholderId}~1school/put) and [DELETE](/reference/uitpas.json/paths/~1passholders~1{passholderId}~1school/delete) on this endpoint, the school of a passholder can be retrieved, updated and deleted. All schools are organizers.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organizer"
              }
            }
          },
          "description": "The Organizer object representing the school, with at least the id present. Name will be ignored."
        },
        "security": [
          {
            "USER_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          },
          {
            "CLIENT_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          }
        ],
        "tags": [
          "Schools"
        ]
      },
      "delete": {
        "summary": "Delete passholder school",
        "operationId": "delete-passholders-school",
        "responses": {
          "204": {
            "description": "No Content. Delete succeeded."
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not found. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/passholder-not-found\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "description": "Delete the passholder's school relation.\n\nThe user or client performing this request must have `PASSHOLDER_UPDATE` permission.\n\n<!-- theme: warning -->\n\n> Passholder schools are used to manage passholders in a very specific case. If you are not explicitly working with UiTPAS schools, you will probably **NOT** need this API. \n\nUsing [GET](/reference/uitpas.json/paths/~1passholders~1{passholderId}~1school/get), [PUT](/reference/uitpas.json/paths/~1passholders~1{passholderId}~1school/put) and [DELETE](/reference/uitpas.json/paths/~1passholders~1{passholderId}~1school/delete) on this endpoint, the school of a passholder can be retrieved, updated and deleted. All schools are organizers.",
        "security": [
          {
            "USER_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          },
          {
            "CLIENT_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          }
        ],
        "tags": [
          "Schools"
        ]
      }
    },
    "/organizers/{organizerId}/financial-reports/periods": {
      "parameters": [
        {
          "$ref": "#/components/parameters/organizerId"
        }
      ],
      "get": {
        "summary": "Get suggested financial report periods",
        "tags": [
          "Financial reports"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReportPeriod"
                  }
                },
                "examples": {
                  "example-1": {
                    "value": [
                      {
                        "startDate": "2019-08-24",
                        "endDate": "2019-08-24"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/organizer-not-found\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "get-organizers-financial-reports-periods",
        "security": [
          {
            "USER_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          },
          {
            "CLIENT_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          }
        ],
        "description": "Retrieve suggested report periods for an organizer.\n\nThe caller of this request must have `ORGANIZER_REPORTS` permission for the given organizer.\n"
      }
    },
    "/organizers/{organizerId}/financial-reports": {
      "parameters": [
        {
          "$ref": "#/components/parameters/organizerId"
        }
      ],
      "post": {
        "summary": "Start an export of a financial report",
        "operationId": "post-organizers-financial-reports",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                },
                "examples": {
                  "Example of started export": {
                    "value": {
                      "status": "STARTED",
                      "id": 232432,
                      "creationDate": "2022-06-10T12:26:30+02:00"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/body/missing\n* https://api.publiq.be/probs/body/invalid-syntax\n* https://api.publiq.be/probs/body/invalid-data",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/organizer-not-found\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Financial reports"
        ],
        "description": "Starts a financial report export. The result of this request is a `reportId` that can be used to request the status of the report export and the download.\n\nThe caller of this request must have `ORGANIZER_REPORTS` permission for the given organizer.\n",
        "security": [
          {
            "USER_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          },
          {
            "CLIENT_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          }
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportPeriod"
              },
              "examples": {
                "Example": {
                  "value": {
                    "startDate": "2019-07-01",
                    "endDate": "2019-09-30"
                  }
                }
              }
            }
          },
          "description": "The period for which to generate the financial report. \nThe `ReportPeriod` object can be retrieved using `GET /organizers/{organizerId}/financial-reports/periods` or the `startDate` and `endDate` can be customized."
        }
      },
      "get": {
        "summary": "Get financial report exports",
        "operationId": "get-organizers-financial-reports",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Report"
                  }
                },
                "examples": {
                  "Example": {
                    "value": [
                      {
                        "status": "AVAILABLE",
                        "id": 123456,
                        "period": {
                          "startDate": "2019-08-24",
                          "endDate": "2019-08-24"
                        },
                        "creationDate": "2022-06-07T10:01:32+00:00"
                      },
                      {
                        "status": "FAILED",
                        "id": 345681,
                        "period": {
                          "startDate": "2000-01-01",
                          "endDate": "2020-06-07"
                        },
                        "creationDate": "2022-06-07T10:02:33+00:00",
                        "message": "Geen financieel overzicht beschikbaar voor periode 2000/01/01 - 2000/06/07"
                      }
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/organizer-not-found\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "description": "Get previously exported financial reports. \n\n> Note: Reports will only be available for a limited amount of time. When they become unavailable, a new export can be requested using `POST /organizers/{organizerId}/financial-reports`  \n\n\nThe caller of this request must have `ORGANIZER_REPORTS` permission for the given organizer.\n",
        "security": [
          {
            "USER_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          },
          {
            "CLIENT_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          }
        ],
        "tags": [
          "Financial reports"
        ]
      }
    },
    "/organizers/{organizerId}/financial-reports/{reportId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/organizerId"
        },
        {
          "$ref": "#/components/parameters/reportId"
        }
      ],
      "get": {
        "summary": "Get financial report status",
        "tags": [
          "Financial reports"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                },
                "examples": {
                  "Example of a started report": {
                    "value": {
                      "id": 23243,
                      "status": "STARTED",
                      "creationDate": "2022-06-07T10:01:32+00:00"
                    }
                  },
                  "Example of an available report": {
                    "value": {
                      "id": 23244,
                      "status": "AVAILABLE",
                      "creationDate": "2022-06-07T10:01:32+00:00"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/organizer-not-found\n* https://api.publiq.be/probs/uitpas/report-not-found\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "get-organizers-financial-reports-reportId",
        "description": "Retrieve the status of a previously started report export.\n\nThe caller of this request must have `ORGANIZER_REPORTS` permission for the given organizer.\n",
        "security": [
          {
            "USER_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          },
          {
            "CLIENT_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          }
        ]
      }
    },
    "/organizers/{organizerId}/financial-reports/{reportId}.zip": {
      "parameters": [
        {
          "$ref": "#/components/parameters/organizerId"
        },
        {
          "$ref": "#/components/parameters/reportId"
        }
      ],
      "get": {
        "summary": "Download financial report",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/x-zip-compressed": {
                "schema": {},
                "examples": {}
              }
            },
            "headers": {
              "content-disposition": {
                "schema": {
                  "type": "string",
                  "example": "attachment; filename=\"financialOverview_organizerX_20210526_1512.zip\""
                },
                "description": "Header indicating that this response should be handled as a separate file download"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/organizer-not-found\n* https://api.publiq.be/probs/uitpas/report-not-found\n\nThe detail property might include more information for the client developer.\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-organizers-financial-reports-reportId-zip",
        "description": "Retrieve the actual report zip file of an `available` report.\n\nThe caller of this request must have `ORGANIZER_REPORTS` permission for the given organizer.\n",
        "tags": [
          "Financial reports"
        ],
        "security": [
          {
            "USER_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          },
          {
            "CLIENT_ACCESS_TOKEN": [
              "https://api.publiq.be/auth/uitpas"
            ]
          }
        ]
      }
    },
    "/passes/{uitpasNumber}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/uitpasNumber"
        }
      ],
      "get": {
        "summary": "Retrieve pass by UiTPAS number",
        "tags": [
          "Passholders"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pass"
                },
                "examples": {
                  "Example with expired social tariff and warning message": {
                    "value": {
                      "passholderId": "b34c19fc-bcf9-4d10-aeb2-6bc9efd38b68",
                      "uitpasNumber": "0560002524314",
                      "firstName": "Jan",
                      "points": 12,
                      "postalCode": "1000",
                      "socialTariff": {
                        "status": "EXPIRED",
                        "endDate": "2024-04-30T21:59:00"
                      },
                      "messages": [
                        {
                          "level": "WARN",
                          "text": "Je sociaal tarief is verlopen. Contacteer je UiTPAS balie."
                        }
                      ]
                    }
                  },
                  "Example without social tariff or messages": {
                    "value": {
                      "passholderId": "b34c19fc-bcf9-4d10-aeb2-6bc9efd38b68",
                      "uitpasNumber": "0560002524314",
                      "firstName": "Jan",
                      "points": 12,
                      "postalCode": "1000",
                      "socialTariff": {
                        "status": "NONE"
                      }
                    }
                  },
                  "Example with social tariff": {
                    "value": {
                      "passholderId": "b34c19fc-bcf9-4d10-aeb2-6bc9efd38b68",
                      "uitpasNumber": "0560002524314",
                      "firstName": "Jan",
                      "points": 12,
                      "postalCode": "1000",
                      "socialTariff": {
                        "status": "ACTIVE",
                        "endDate": "2024-04-30T21:59:00"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/passholder-blocked\n* https://api.publiq.be/probs/uitpas/card-blocked\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/pass-not-found\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "get-passes-uitpasNumber",
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          },
          {
            "CLIENT_ACCESS_TOKEN": []
          }
        ],
        "description": "Retrieve information related to a pass, searched by UiTPAS number.\n\nIf the response contains `messages`, they MUST be displayed to the end-user.\n\nThe caller of this request must have `PASSES_READ` permission."
      }
    },
    "/insz-numbers/{inszNumber}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/inszNumber"
        }
      ],
      "get": {
        "summary": "Retrieve pass by INSZ number",
        "tags": [
          "Passholders"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pass"
                },
                "examples": {
                  "Example with expired social tariff and warning message": {
                    "value": {
                      "passholderId": "b34c19fc-bcf9-4d10-aeb2-6bc9efd38b68",
                      "uitpasNumber": "0560002524314",
                      "firstName": "Jan",
                      "points": 12,
                      "postalCode": "1000",
                      "socialTariff": {
                        "status": "EXPIRED",
                        "endDate": "2024-04-30T21:59:00"
                      },
                      "messages": [
                        {
                          "level": "WARN",
                          "text": "Je sociaal tarief is verlopen. Contacteer je UiTPAS balie."
                        }
                      ]
                    }
                  },
                  "Example without social tariff or messages": {
                    "value": {
                      "passholderId": "b34c19fc-bcf9-4d10-aeb2-6bc9efd38b68",
                      "uitpasNumber": "0560002524314",
                      "firstName": "Jan",
                      "points": 12,
                      "postalCode": "1000",
                      "socialTariff": {
                        "status": "NONE"
                      }
                    }
                  },
                  "Example with social tariff": {
                    "value": {
                      "passholderId": "b34c19fc-bcf9-4d10-aeb2-6bc9efd38b68",
                      "uitpasNumber": "0560002524314",
                      "firstName": "Jan",
                      "points": 12,
                      "postalCode": "1000",
                      "socialTariff": {
                        "status": "ACTIVE",
                        "endDate": "2024-04-30T21:59:00"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/passholder-blocked\n* https://api.publiq.be/probs/uitpas/card-blocked\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/pass-not-found\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "get-insz-numbers-inszNumber",
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          },
          {
            "CLIENT_ACCESS_TOKEN": []
          }
        ],
        "description": "Retrieve information related to a pass, searched by INSZ number.\n\nIf the response contains `messages`, they MUST be displayed to the end-user.\n\nThe caller of this request must have `INSZ_NUMBERS_READ` permission."
      }
    },
    "/chip-numbers/{chipNumber}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/chipNumber"
        }
      ],
      "get": {
        "summary": "Retrieve pass by chip number",
        "tags": [
          "Passholders"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pass"
                },
                "examples": {
                  "Example with expired social tariff and warning message": {
                    "value": {
                      "passholderId": "b34c19fc-bcf9-4d10-aeb2-6bc9efd38b68",
                      "uitpasNumber": "0560002524314",
                      "firstName": "Jan",
                      "points": 12,
                      "postalCode": "1000",
                      "socialTariff": {
                        "status": "ACTIVE",
                        "endDate": "2024-04-30T21:59:00"
                      },
                      "messages": [
                        {
                          "level": "WARN",
                          "text": "Je sociaal tarief is verlopen. Contacteer je UiTPAS balie."
                        }
                      ]
                    }
                  },
                  "Example without social tariff or messages": {
                    "value": {
                      "passholderId": "b34c19fc-bcf9-4d10-aeb2-6bc9efd38b68",
                      "uitpasNumber": "0560002524314",
                      "firstName": "Jan",
                      "points": 12,
                      "postalCode": "1000",
                      "socialTariff": {
                        "status": "NONE"
                      }
                    }
                  },
                  "Example with social tariff": {
                    "value": {
                      "passholderId": "b34c19fc-bcf9-4d10-aeb2-6bc9efd38b68",
                      "uitpasNumber": "0560002524314",
                      "firstName": "Jan",
                      "points": 12,
                      "postalCode": "1000",
                      "socialTariff": {
                        "status": "ACTIVE",
                        "endDate": "2024-04-30T21:59:00"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/passholder-blocked\n* https://api.publiq.be/probs/uitpas/card-blocked\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/pass-not-found\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "get-chip-numbers-chipNumber",
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          },
          {
            "CLIENT_ACCESS_TOKEN": []
          }
        ],
        "description": "Retrieve information related to a pass, searched by chip number.\n\nIf the response contains `messages`, they MUST be displayed to the end-user.\n\nThe caller of this request must have `CHIP_NUMBERS_READ` permission."
      }
    },
    "/rewards": {
      "get": {
        "x-internal": false,
        "summary": "Search rewards",
        "operationId": "get-rewards",
        "responses": {
          "200": {
            "description": "Paginated collection of rewards.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardsPaginatedResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "totalItems": 1,
                      "member": [
                        {
                          "id": "1234",
                          "title": "Free entrance for 10 points on 1 specific event",
                          "type": "POINTS",
                          "owningCardSystem": {
                            "id": 1,
                            "name": "UiTPAS Dender"
                          },
                          "categories": [
                            "Doen"
                          ],
                          "allCardSystems": true,
                          "status": "ACTIVE",
                          "maxAvailableUnits": 0,
                          "unitsTaken": 0,
                          "promotionalDescription": "this is the mandatory description",
                          "practicalInfo": "this is an optional extra description",
                          "pictures": [
                            "https://www.uitpas.be/default-picture-for-ticketsale-rewards.png"
                          ],
                          "publicationPeriod": {
                            "begin": "2021-08-24T14:15:22Z",
                            "end": "2022-08-24T14:15:22Z"
                          },
                          "redeemPeriod": {
                            "begin": "2021-08-24T14:15:22Z",
                            "end": "2022-08-24T14:15:22Z"
                          },
                          "grantingPeriod": {
                            "begin": "2021-08-24T14:15:22Z",
                            "end": "2022-08-24T14:15:22Z"
                          },
                          "moreInfoURL": "https://www.uitpas.be/reward/example-more-info",
                          "inSpotlight": false,
                          "points": 10,
                          "forKids": false,
                          "sport": false,
                          "online": false
                        }
                      ],
                      "facet": {
                        "categories": {
                          "Doen": {
                            "name": {
                              "nl": "Doen"
                            },
                            "count": 402
                          },
                          "Gadget": {
                            "name": {
                              "nl": "Gadget"
                            },
                            "count": 101
                          }
                        },
                        "owningCardSystemId": {
                          "1": {
                            "name": {
                              "nl": "UiTPAS Dender"
                            },
                            "count": 124
                          },
                          "8": {
                            "name": {
                              "nl": "UiTPAS Gent"
                            },
                            "count": 503
                          }
                        },
                        "sport": {
                          "true": {
                            "name": {
                              "nl": "Sportactiviteiten"
                            },
                            "count": 45
                          },
                          "false": {
                            "name": {
                              "nl": "Geen sportactiviteiten"
                            },
                            "count": 458
                          }
                        },
                        "forKids": {
                          "true": {
                            "name": {
                              "nl": "Speciaal voor kinderen"
                            },
                            "count": 24
                          },
                          "false": {
                            "name": {
                              "nl": "Niet speciaal voor kinderen"
                            },
                            "count": 479
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/organizer-not-found\n* https://api.publiq.be/probs/uitpas/event-not-found\n* https://api.publiq.be/probs/uitpas/cardsystem-not-found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found. Error type:\n\nhttps://api.publiq.be/probs/url/not-found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "tags": [
          "Rewards"
        ],
        "description": "Search rewards.\n\nThe caller of this request does not need special permissions permission except `REWARDS_PASSHOLDER_READ` to use the `isRedeemableBy` query parameter.\n\nThis endpoint allows authentication with [client identification](/docs/authentication/ZG9jOjExODE5NDY5-client-identification), [client access tokens](/docs/authentication/ZG9jOjExODE5NDY4-client-access-token), and [user access tokens](/docs/authentication/ZG9jOjExODE5NTM5-user-access-token).",
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          },
          {
            "CLIENT_ACCESS_TOKEN": []
          },
          {
            "CLIENT_IDENTIFICATION": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "organizerId",
            "description": "Include only rewards applicable for this organizer",
            "style": "form"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "owningCardSystemId",
            "description": "Include only rewards of this card system",
            "style": "form"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "POINTS",
                "WELCOME"
              ]
            },
            "in": "query",
            "name": "type",
            "description": "Include only rewards of this type",
            "style": "form"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "text",
            "description": "Free text search in reward name, organizer or city.",
            "style": "form"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "categories",
                  "forKids",
                  "sport",
                  "online",
                  "lastChance",
                  "owningCardSystemId",
                  "type"
                ]
              }
            },
            "in": "query",
            "name": "facets",
            "description": "Request facets of the given field in the response. Can be included more than once to allow multiple values.",
            "style": "form",
            "explode": true
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "sort[name]",
            "description": "Sorts the rewards by their name in ascending or descending order.",
            "style": "form"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "sort[creationDate]",
            "description": "Sort on reward creation date",
            "style": "form"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "sort[redeemCount]",
            "description": "Sort on redeem count",
            "style": "form"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "in": "query",
            "name": "sort[points]",
            "description": "Sort on reward points",
            "style": "form"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Goede doel",
                  "Eten en drinken",
                  "Doen",
                  "Gadget of item"
                ]
              }
            },
            "in": "query",
            "name": "categories",
            "description": "Include only rewards of this category. Can be included more than once to allow multiple values.",
            "style": "form",
            "explode": true
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "pointsFrom",
            "description": "Include only rewards with this value (including) or more points.",
            "style": "form"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "pointsTo",
            "description": "Include only rewards with this value (including) or less points.",
            "style": "form"
          },
          {
            "schema": {
              "type": "string",
              "default": "ENDUSERS",
              "enum": [
                "ALL",
                "ENDUSERS"
              ]
            },
            "in": "query",
            "name": "subset",
            "description": "Include only rewards of a specific subset. Defaults to `ENDUSERS`, which means all active rewards, that are currently published and in its redeem period and are part of a permanent cardsystem. Set this field to `ALL` to include all rewards.",
            "style": "form"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "sport",
            "description": "Include only rewards with the sport property true or false. If omitted, rewards with any sport value are included."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "forKids",
            "description": "Include only rewards with the forKids property true or false. If omitted, rewards with any forKids value are included."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "online",
            "description": "Include only rewards with the online property true or false. If omitted, rewards with any online value are included."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "lastChance",
            "description": "Include only rewards with the lastChance property true or false. If omitted, rewards with any lastChance value are included."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "INACTIVE",
                "DELETED"
              ]
            },
            "in": "query",
            "name": "status",
            "description": "Include only rewards with this status. Also set `subset=ALL` to include non-ACTIVE rewards."
          }
        ]
      },
      "post": {
        "x-internal": false,
        "summary": "Create new reward",
        "operationId": "post-rewards",
        "responses": {
          "200": {
            "description": "Reward created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reward"
                },
                "examples": {
                  "Points reward": {
                    "value": {
                      "id": "1234",
                      "type": "POINTS",
                      "title": "Gratis koffie",
                      "owningCardSystem": {
                        "id": 1,
                        "name": "UiTPAS Dender"
                      },
                      "allCardSystems": true,
                      "status": "ACTIVE",
                      "maxAvailableUnits": 100,
                      "unitsTaken": 0,
                      "promotionalDescription": "this is the mandatory description",
                      "pictures": [
                        "https://www.uitpas.be/default-picture-for-points-rewards.png"
                      ],
                      "publicationPeriod": {
                        "begin": "2021-08-24T14:15:22Z",
                        "end": "2022-08-24T14:15:22Z"
                      },
                      "redeemPeriod": {
                        "begin": "2021-08-24T14:15:22Z",
                        "end": "2022-08-24T14:15:22Z"
                      },
                      "moreInfoURL": "https://example.org/more-info-about-this-reward",
                      "inSpotlight": false,
                      "points": 3,
                      "categories": [
                        "Eten en drinken"
                      ],
                      "forKids": false,
                      "sport": false,
                      "online": true
                    }
                  },
                  "Welcome reward": {
                    "value": {
                      "id": "1234",
                      "type": "WELCOME",
                      "title": "Gratis zwemmen",
                      "owningCardSystem": {
                        "id": 1,
                        "name": "UiTPAS Dender"
                      },
                      "allCardSystems": true,
                      "status": "ACTIVE",
                      "maxAvailableUnits": 100,
                      "unitsTaken": 0,
                      "promotionalDescription": "this is the mandatory description",
                      "pictures": [
                        "https://www.uitpas.be/default-picture-for-welcome-rewards.png"
                      ],
                      "publicationPeriod": {
                        "begin": "2021-08-24T14:15:22Z",
                        "end": "2022-08-24T14:15:22Z"
                      },
                      "redeemPeriod": {
                        "begin": "2021-08-24T14:15:22Z",
                        "end": "2022-08-24T14:15:22Z"
                      },
                      "grantingPeriod": {
                        "begin": "2021-08-24T14:15:22Z",
                        "end": "2022-08-24T14:15:22Z"
                      },
                      "inSpotlight": false,
                      "forKids": false,
                      "sport": false,
                      "online": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/body/missing\n* https://api.publiq.be/probs/body/invalid-syntax\n* https://api.publiq.be/probs/body/invalid-data\n* https://api.publiq.be/probs/uitpas/invalid-card-system\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          },
          {
            "CLIENT_ACCESS_TOKEN": []
          }
        ],
        "description": "Create a new reward.\n\nThe caller of this request must have `REWARDS_WRITE` permission for the given organizer.",
        "tags": [
          "Rewards"
        ],
        "requestBody": {
          "description": "Details of the new reward to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reward"
              },
              "examples": {
                "Points Reward Example": {
                  "value": {
                    "title": "Free entrance for 10 points on 1 specific event",
                    "type": "POINTS",
                    "categories": [
                      "Doen"
                    ],
                    "promotionalDescription": "this is the mandatory description",
                    "publicationPeriod": {
                      "begin": "2021-08-24T14:15:22Z"
                    },
                    "moreInfoURL": "https://example.org/more-info-about-this-reward",
                    "points": 10
                  }
                },
                "Welcome Reward Example": {
                  "value": {
                    "title": "Gratis tas koffie",
                    "type": "WELCOME",
                    "promotionalDescription": "this is the mandatory description",
                    "publicationPeriod": {
                      "begin": "2021-08-24T14:15:22Z"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rewards/{rewardId}": {
      "get": {
        "x-internal": false,
        "summary": "Retrieve reward",
        "tags": [
          "Rewards"
        ],
        "responses": {
          "200": {
            "description": "Details of the requested reward.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reward"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "1234",
                      "type": "POINTS",
                      "title": "Free entrance for 10 points on 1 specific event UPDATE",
                      "owningCardSystem": {
                        "id": 1,
                        "name": "UiTPAS Dender"
                      },
                      "allCardSystems": true,
                      "status": "ACTIVE",
                      "maxAvailableUnits": 0,
                      "unitsTaken": 0,
                      "promotionalDescription": "this is the mandatory description",
                      "practicalInfo": "this is an optional extra description",
                      "pictures": [
                        "https://www.uitpas.be/default-picture-for-ticketsale-rewards.png"
                      ],
                      "publicationPeriod": {
                        "begin": "2021-08-24T14:15:22Z",
                        "end": "2022-08-24T14:15:22Z"
                      },
                      "redeemPeriod": {
                        "begin": "2021-08-24T14:15:22Z",
                        "end": "2022-08-24T14:15:22Z"
                      },
                      "grantingPeriod": {
                        "begin": "2021-08-24T14:15:22Z",
                        "end": "2022-08-24T14:15:22Z"
                      },
                      "moreInfoURL": "https://example.org/more-info-about-this-reward",
                      "inSpotlight": false,
                      "points": 10,
                      "categories": [
                        "Eten en drinken"
                      ],
                      "forKids": false,
                      "sport": false,
                      "online": false
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/reward-not-found\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "get-rewards-id",
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          },
          {
            "CLIENT_ACCESS_TOKEN": []
          }
        ],
        "description": "Retrieve reward by ID.\n\nThe caller of this request must have `REWARDS_READ` permission for the given organizer."
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "rewardId",
          "in": "path",
          "required": true,
          "description": "Unique ID of a single reward."
        }
      ],
      "put": {
        "x-internal": false,
        "summary": "Update reward",
        "operationId": "put-rewards-id",
        "responses": {
          "200": {
            "description": "Updated info for the reward with the given ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reward"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "1234",
                      "type": "POINTS",
                      "title": "Gratis toegangsticket voor het Design Museum Brussel",
                      "owningCardSystem": {
                        "id": 1,
                        "name": "UiTPAS Dender"
                      },
                      "allCardSystems": true,
                      "status": "ACTIVE",
                      "maxAvailableUnits": 1000,
                      "unitsTaken": 0,
                      "promotionalDescription": "this is the mandatory description",
                      "practicalInfo": "this is an optional extra description",
                      "pictures": [
                        "https://www.uitpas.be/default-picture-for-ticketsale-rewards.png"
                      ],
                      "publicationPeriod": {
                        "begin": "2021-08-24T14:15:22Z",
                        "end": "2022-08-24T14:15:22Z"
                      },
                      "redeemPeriod": {
                        "begin": "2021-08-24T14:15:22Z",
                        "end": "2022-08-24T14:15:22Z"
                      },
                      "grantingPeriod": {
                        "begin": "2021-08-24T14:15:22Z",
                        "end": "2022-08-24T14:15:22Z"
                      },
                      "moreInfoURL": "https://www.uitpas.be/reward/example-more-info",
                      "inSpotlight": false,
                      "points": 10,
                      "categories": [
                        "Doen"
                      ],
                      "forKids": false,
                      "sport": false,
                      "online": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/body/missing\n* https://api.publiq.be/probs/body/invalid-syntax\n* https://api.publiq.be/probs/body/invalid-data\n* https://api.publiq.be/probs/uitpas/invalid-card-system\n* https://api.publiq.be/probs/uitpas/reward-not-editable\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/reward-not-found\n\nThe detail property might include more information for the client developer.",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "USER_ACCESS_TOKEN": []
          },
          {
            "CLIENT_ACCESS_TOKEN": []
          }
        ],
        "requestBody": {
          "description": "New details for the reward. Will overwrite the previous details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Reward"
              },
              "examples": {
                "Example": {
                  "value": {
                    "title": "Gratis toegangsticket voor het Design Museum Brussel",
                    "type": "POINTS",
                    "maxAvailableUnits": 1000,
                    "categories": [
                      "Doen"
                    ],
                    "promotionalDescription": "this is the mandatory description",
                    "practicalInfo": "this is an optional extra description",
                    "publicationPeriod": {
                      "begin": "2021-08-24T14:15:22Z",
                      "end": "2022-08-24T14:15:22Z"
                    },
                    "redeemPeriod": {
                      "begin": "2021-08-24T14:15:22Z",
                      "end": "2022-08-24T14:15:22Z"
                    },
                    "grantingPeriod": {
                      "begin": "2021-08-24T14:15:22Z",
                      "end": "2022-08-24T14:15:22Z"
                    },
                    "moreInfoURL": "https://example.org/more-info-about-this-reward",
                    "points": 10
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Rewards"
        ],
        "description": "Update reward.\n\nThe caller of this request must have `REWARDS_WRITE` permission for the given organizer."
      }
    },
    "/rewards/{rewardId}/redeem-status": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "rewardId",
          "in": "path",
          "required": true,
          "description": "Unique ID of a single reward."
        }
      ],
      "get": {
        "x-internal": false,
        "summary": "Check redeem status of a reward for a passholder",
        "operationId": "get-rewards-id-redeem-status",
        "responses": {
          "200": {
            "description": "Info that indicates if the reward with the given ID is redeemable or not by the passholder with the given UiTPAS number.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "redeemable": {
                      "type": "boolean",
                      "description": "Whether this reward can be redeemed by the given passholder.",
                      "readOnly": true
                    },
                    "reason": {
                      "type": "string",
                      "description": "If redeemable is false, this field contains the reason why:\n- `INVALID_CARD`: the given `uitpasNumber` is not valid.\n- `PASSHOLDER_VOLUME`: maximum number of times this reward can be redeemed per passholder has been reached.\n- `PASSHOLDER_POINTS`: passholder does not have enough points to redeem this reward.\n- `REWARD_PERIOD`: the current date is outside the redeemPeriod of this reward\n- `REWARD_VOLUME`: maximum number of times this reward can be redeemed (in general) has been reached.\n- `PASSHOLDER_APPLICABLE_CARDSYSTEMS`: the passholder is not a member of one of the applicable card systems of this reward.\n- `PASSHOLDER_NO_ACTIVE_CARDSYSTEMS`: the passholder is not active or has no active card system memberships\n- `SOCIAL_TARIFF_EXPIRED`: the social tariff of this passholder expired.\n",
                      "enum": [
                        "INVALID_CARD",
                        "PASSHOLDER_VOLUME",
                        "PASSHOLDER_POINTS",
                        "REWARD_PERIOD",
                        "REWARD_VOLUME",
                        "PASSHOLDER_APPLICABLE_CARDSYSTEMS",
                        "SOCIAL_TARIFF_EXPIRED",
                        "PASSHOLDER_NO_ACTIVE_CARDSYSTEM"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "description": "User readable message of the reason (only if redeemable if false)",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "redeemable"
                  ]
                },
                "examples": {
                  "Example redeemable": {
                    "value": {
                      "redeemable": true
                    }
                  },
                  "Example not redeemable": {
                    "value": {
                      "redeemable": false,
                      "reason": "PASSHOLDER_POINTS",
                      "message": "Jammer, je hebt nog niet genoeg punten om dit voordeel om te ruilen."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/invalid-uitpas-number\n\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/reward-not-found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "description": "Check the reward redeem status for a passholder.\n\n\nThe caller of this request must have `REDEEM_REWARDS` permission for the given organizer.",
        "security": [
          {
            "CLIENT_ACCESS_TOKEN": []
          },
          {
            "USER_ACCESS_TOKEN": []
          }
        ],
        "tags": [
          "Rewards"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": true,
            "name": "uitpasNumber",
            "description": "UiTPAS number identifying the passholder who wants to redeem this reward."
          }
        ]
      }
    },
    "/rewards/redeemed": {
      "parameters": [],
      "post": {
        "x-internal": false,
        "summary": "Redeem reward",
        "operationId": "post-rewards-redeemed",
        "responses": {
          "201": {
            "description": "Info about the redeemed reward.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedeemedReward"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "id": "7982c147-7cf6-4268-acdf-ffbd3d77a2ca",
                      "reward": {
                        "id": "374a166b-9170-4f9e-a797-48fb5bd6840d",
                        "title": "A great reward",
                        "type": "POINTS",
                        "promotionalDescription": "This is a description",
                        "publicationPeriod": {
                          "begin": "2019-08-24T14:15:22Z",
                          "end": "2019-08-24T14:15:22Z"
                        },
                        "grantingPeriod": {
                          "begin": "2019-08-24T14:15:22Z",
                          "end": "2019-08-24T14:15:22Z"
                        },
                        "points": 0,
                        "moreInfoURL": "https://www.uitpas.be/reward/example-more-info",
                        "owningCardSystem": {
                          "id": 1,
                          "name": "UiTPAS Dender"
                        },
                        "allCardSystems": true,
                        "organizers": [
                          {
                            "id": "abc12345",
                            "name": "UiTPAS Test Organizer"
                          }
                        ],
                        "status": "ACTIVE",
                        "maxAvailableUnits": 100,
                        "unitsTaken": 0,
                        "practicalInfo": "This is information on how to redeem the reward.",
                        "pictures": [
                          "https://www.uitpas.be/default-picture-for-ticketsale-rewards.png"
                        ],
                        "redeemPeriod": {
                          "begin": "2019-08-24T14:15:22Z",
                          "end": "2019-08-24T14:15:22Z"
                        },
                        "categories": [
                          "Eten en drinken"
                        ],
                        "forKids": true,
                        "sport": true,
                        "online": false
                      },
                      "redeemDate": "2019-08-24T14:15:22Z",
                      "redeemInfo": {
                        "text": "Info on how to use the redeem code",
                        "link": "https://example.com/redeem-your-reward-here",
                        "label": "Claim your discount"
                      },
                      "redeemCode": "abc123456789"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/body/missing\n* https://api.publiq.be/probs/body/invalid-syntax\n* https://api.publiq.be/probs/body/invalid-data\n* https://api.publiq.be/probs/uitpas/invalid-card\n* https://api.publiq.be/probs/uitpas/social-tariff-expired\n* https://api.publiq.be/probs/uitpas/invalid-uitpas-number\n* https://api.publiq.be/probs/uitpas/passholder-not-found\n* https://api.publiq.be/probs/uitpas/reward-not-found\n* https://api.publiq.be/probs/uitpas/reward-period-constraint\n* https://api.publiq.be/probs/uitpas/reward-volume-constraint\n* https://api.publiq.be/probs/uitpas/reward-passholder-volume-constraint\n* https://api.publiq.be/probs/uitpas/reward-passholder-points-constraint\n* https://api.publiq.be/probs/uitpas/reward-passholder-no-applicable-cardsystems\n* https://api.publiq.be/probs/uitpas/passholder-no-active-cardsystems\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/reward-not-found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "description": "Redeem reward.\n\nThe caller of this request must have `REDEEM_REWARDS` permission for the given organizer.",
        "tags": [
          "Rewards"
        ],
        "requestBody": {
          "description": "Reward (id) to mark as redeemed, and for which UiTPAS number specifically.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rewardId": {
                    "type": "string",
                    "description": "ID of reward to redeem"
                  },
                  "uitpasNumber": {
                    "type": "string",
                    "description": "UiTPAS number of the passholder exchanging this reward."
                  }
                },
                "required": [
                  "rewardId",
                  "uitpasNumber"
                ]
              },
              "examples": {
                "Example": {
                  "value": {
                    "uitpasNumber": "0930012345615",
                    "rewardId": "fce4bd2f-4dca-4a44-9912-6168f0ac7e5e"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "CLIENT_ACCESS_TOKEN": []
          },
          {
            "USER_ACCESS_TOKEN": []
          }
        ]
      },
      "get": {
        "x-internal": false,
        "summary": "Retrieve redeemed rewards",
        "operationId": "get-rewards-redeemed",
        "responses": {
          "200": {
            "description": "Paginated collection of redeemed rewards.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedeemedRewardsPaginatedResponse"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "totalItems": 10,
                      "member": [
                        {
                          "id": "7982c147-7cf6-4268-acdf-ffbd3d77a2ca",
                          "reward": {
                            "id": "374a166b-9170-4f9e-a797-48fb5bd6840d",
                            "title": "A great reward",
                            "type": "POINTS",
                            "promotionalDescription": "This is a description",
                            "publicationPeriod": {
                              "begin": "2019-08-24T14:15:22Z",
                              "end": "2019-08-24T14:15:22Z"
                            },
                            "grantingPeriod": {
                              "begin": "2019-08-24T14:15:22Z",
                              "end": "2019-08-24T14:15:22Z"
                            },
                            "points": 0,
                            "moreInfoURL": "https://www.uitpas.be/reward/example-more-info",
                            "owningCardSystem": {
                              "id": 1,
                              "name": "UiTPAS Dender"
                            },
                            "allCardSystems": true,
                            "organizers": [
                              {
                                "id": "abc12345",
                                "name": "UiTPAS Test Organizer"
                              }
                            ],
                            "status": "ACTIVE",
                            "maxAvailableUnits": 100,
                            "unitsTaken": 0,
                            "practicalInfo": "This is information on how to redeem the reward.",
                            "pictures": [
                              "https://www.uitpas.be/default-picture-for-ticketsale-rewards.png"
                            ],
                            "redeemPeriod": {
                              "begin": "2019-08-24T14:15:22Z",
                              "end": "2019-08-24T14:15:22Z"
                            },
                            "categories": [
                              "Eten en drinken"
                            ],
                            "forKids": true,
                            "sport": true,
                            "online": true,
                            "lastChance": true
                          },
                          "redeemDate": "2019-08-24T14:15:22Z",
                          "redeemInfo": {
                            "text": "Info on how to use the redeem code",
                            "link": "https://example.com/redeem-your-reward-here",
                            "label": "Claim your discount"
                          },
                          "redeemCode": "abc123456789"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Possible error types:\n\n* https://api.publiq.be/probs/uitpas/social-tariff-expired\n* https://api.publiq.be/probs/uitpas/invalid-uitpas-number\n\n",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "description": "Retrieve redeemed rewards for a passholder.\n\nThe caller of this request must have `REWARDS_READ` permission.",
        "security": [
          {
            "CLIENT_ACCESS_TOKEN": []
          },
          {
            "USER_ACCESS_TOKEN": []
          }
        ],
        "tags": [
          "Rewards"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": true,
            "name": "uitpasNumber",
            "description": "UiTPAS number identifying the passholder."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "POINTS",
                "WELCOME"
              ]
            },
            "in": "query",
            "name": "rewardType",
            "description": "Type of the redeemed reward."
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ]
      }
    },
    "/card-systems": {
      "get": {
        "x-internal": false,
        "summary": "Search card systems",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardSystemsPaginatedCollection"
                },
                "examples": {
                  "Example": {
                    "value": {
                      "totalItems": 0,
                      "member": [
                        {
                          "id": 1,
                          "name": "UiTPAS Dender",
                          "branding": {
                            "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
                            "primaryColor": "rgba(0,0,0,1.0)",
                            "secondaryColor": "rgba(97,166,14,1.0)"
                          },
                          "links": {
                            "website": "https://www.uitpas.be"
                          },
                          "cities": [
                            {
                              "postalCode": "9300",
                              "name": "Aalst"
                            },
                            {
                              "postalCode": "9400",
                              "name": "Ninove"
                            }
                          ],
                          "permanent": true,
                          "allowsCardlessRegistration": false
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "Not Found. Error type:\n\nhttps://api.publiq.be/probs/url/not-found",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "operationId": "get-card-systems",
        "description": "Search card systems.\n\nThis caller of this method, identified by client identification, client access token or user access token, does not require any permissions.",
        "parameters": [
          {
            "schema": {
              "type": "boolean",
              "default": true
            },
            "in": "query",
            "name": "permanent",
            "description": "Include only permanent (`true`) card systems or temporary (`false`) card systems."
          },
          {
            "$ref": "#/components/parameters/start"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100,
              "minimum": 0
            },
            "description": "Maximum amount of results to return. Can be used in combination with `start` for pagination.",
            "name": "limit"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "city",
            "description": "Search card systems by city name. Can be included more than once to allow multiple values. Valid values can found in https://taxonomy.uitdatabank.be/api/city",
            "style": "form",
            "explode": true
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "postalCode",
            "description": "Search card systems by postal code. Can be included more than once to allow multiple values. Valid values can found in https://taxonomy.uitdatabank.be/api/city",
            "style": "form",
            "explode": true
          }
        ],
        "tags": [
          "Card Systems"
        ],
        "security": [
          {
            "CLIENT_IDENTIFICATION": []
          },
          {
            "CLIENT_ACCESS_TOKEN": []
          },
          {
            "USER_ACCESS_TOKEN": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Tariff": {
        "type": "object",
        "title": "Tariff",
        "description": "The Tariff describes the discounted price a passholder has to pay for a given ticket. ",
        "x-internal": false,
        "example": {
          "id": "SOCIALTARIFF-1",
          "name": "UiTPAS Kansentarief",
          "price": 1.5,
          "type": "SOCIALTARIFF"
        },
        "x-tags": [
          "Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the tariff"
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "Human-readable name of the tariff"
          },
          "price": {
            "type": "number",
            "readOnly": true,
            "description": "Discounted price to pay for this tariff, in euro."
          },
          "type": {
            "type": "string",
            "enum": [
              "SOCIALTARIFF",
              "COUPON",
              "REWARD"
            ],
            "readOnly": true,
            "description": "Type of discount being applied."
          }
        },
        "required": [
          "id"
        ]
      },
      "MembershipPrice": {
        "type": "object",
        "title": "MembershipPrice",
        "description": "The MembershipPrice describes the price an UiTPAS membership in a specific cardsystem for a new or existing passholder.  ",
        "x-internal": false,
        "example": {
          "price": 5,
          "cardSystem": {
            "id": 1,
            "name": "UiTPAS Dender",
            "branding": {
              "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
              "primaryColor": "rgba(0,0,0,1.0)",
              "secondaryColor": "rgba(97,166,14,1.0)"
            },
            "links": {
              "website": "https://www.uitpas.be"
            },
            "cities": [
              {
                "postalCode": "9300",
                "name": "Aalst"
              },
              {
                "postalCode": "9400",
                "name": "Ninove"
              }
            ],
            "permanent": true
          }
        },
        "x-tags": [
          "Models"
        ],
        "properties": {
          "price": {
            "description": "Price for the card system membership, in euro.",
            "type": "number"
          },
          "cardSystem": {
            "$ref": "#/components/schemas/CardSystem"
          }
        },
        "required": [
          "price",
          "cardSystem"
        ]
      },
      "TicketSale": {
        "description": "Model used both for registering new ticket sales and when searching for past ticket sales.\n\nThe `passholder` field is automatically included in responses if you have PASSHOLDER_SEARCH permission. It is not required for ticket sale registrations.",
        "type": "object",
        "example": {
          "regularPrice": 10,
          "regularPriceLabel": "Volwassenen",
          "tariff": {
            "id": "COUPON1234"
          },
          "eventId": "CBA2D826-9E85-47BD-8E0B-2BC7882E68FB",
          "uitpasNumber": "1234567890"
        },
        "title": "TicketSale",
        "x-tags": [
          "Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id of a registered ticket sale. Not required for new ticket sale registrations",
            "readOnly": true
          },
          "regularPrice": {
            "type": "number",
            "description": "Regular price of the ticket before UiTPAS discounts"
          },
          "regularPriceLabel": {
            "type": "string",
            "description": "Optional descriptive label of the regular price. Used in financial reporting"
          },
          "tariffId": {
            "type": "string",
            "description": "Unique ID of the tariff that was paid for the ticket. (Deprecated, use `tariff.id` instead.)",
            "deprecated": true
          },
          "tariff": {
            "$ref": "#/components/schemas/Tariff"
          },
          "eventId": {
            "type": "string",
            "minLength": 1,
            "description": "Id of the event that the ticket sale was for"
          },
          "uitpasNumber": {
            "type": "string",
            "minLength": 1,
            "description": "The passholder's UiTPAS number used to register this ticket sale. Note that the uitpasNumber of a passholder might change over time. This field will always contain the uitpasNumber used when registering the ticket sale. To identify the passholder, use the `passholder` field."
          },
          "passholder": {
            "$ref": "#/components/schemas/Passholder"
          }
        },
        "required": [
          "regularPrice",
          "tariff",
          "eventId",
          "uitpasNumber"
        ]
      },
      "Error": {
        "title": "Error",
        "type": "object",
        "description": "RFC7807 error model for all publiq APIs.",
        "properties": {
          "type": {
            "type": "string",
            "description": "A URI reference that identifies the problem type. Can be used to recognize specific errors in your application code by comparing the complete URI."
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type (for developers)."
          },
          "status": {
            "type": "integer",
            "description": "The HTTP status code."
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem (for developers). "
          },
          "endUserMessage": {
            "type": "object",
            "description": "A human-readable explanation of the problem, specifically for end-users, in one or more languages. Typically available for domain errors, but not for errors caused by a technical issue in the integration (for example invalid JSON syntax in a request body). An `nl` value is always provided, other languages may be provided depending on the API and its intended audience. When this property is included, it is strongly encouraged to show this to the end-user.",
            "properties": {
              "nl": {
                "type": "string",
                "description": "A human-readable explanation of the problem, specifically for end-users, localized in Dutch."
              },
              "fr": {
                "type": "string",
                "description": "A human-readable explanation of the problem, specifically for end-users, localized in French."
              },
              "de": {
                "type": "string",
                "description": "A human-readable explanation of the problem, specifically for end-users, localized in German."
              },
              "en": {
                "type": "string",
                "description": "A human-readable explanation of the problem, specifically for end-users, localized in English."
              }
            },
            "required": [
              "nl"
            ]
          },
          "schemaErrors": {
            "type": "array",
            "description": "A list of one or more schema validation errors (usually used for error type https://api.publiq.be/probs/body/invalid-data).",
            "items": {
              "type": "object",
              "properties": {
                "jsonPointer": {
                  "type": "string",
                  "format": "json-pointer",
                  "description": "RFC6901 compliant pointer that indicates what property/value was invalid."
                },
                "error": {
                  "type": "string",
                  "description": "A human-readable (but often technical) reason why the property was invalid."
                }
              },
              "required": [
                "jsonPointer",
                "error"
              ]
            }
          }
        },
        "required": [
          "type",
          "title",
          "status"
        ]
      },
      "OrganizerPermissions": {
        "title": "OrganizerPermissions",
        "type": "object",
        "x-tags": [
          "Models"
        ],
        "properties": {
          "organizer": {
            "$ref": "#/components/schemas/Organizer"
          }
        },
        "required": [
          "organizer"
        ]
      },
      "Organizer": {
        "title": "Organizer",
        "type": "object",
        "description": "An organisation that partners with UiTPAS to provide discounts and/or rewards, and/or allows points to be collected at their events.",
        "x-tags": [
          "Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID of an UiTPAS organizer. (Same as its ID in UiTdatabank)"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name of an UiTPAS organizer."
          }
        },
        "required": [
          "id"
        ]
      },
      "PassholdersPaginatedResponse": {
        "title": "PassholdersPaginatedResponse",
        "type": "object",
        "x-tags": [
          "Models"
        ],
        "description": "Paginated response object for passholders",
        "properties": {
          "totalItems": {
            "type": "integer",
            "description": "Total amount of passholder results (can be more than the amount of results in the response)."
          },
          "member": {
            "type": "array",
            "description": "List of passholder results for this specific (paginated) request.",
            "items": {
              "$ref": "#/components/schemas/Passholder"
            }
          }
        }
      },
      "RewardsPaginatedResponse": {
        "title": "RewardsPaginatedResponse",
        "type": "object",
        "x-tags": [
          "Models"
        ],
        "description": "Paginated response object for rewards",
        "properties": {
          "totalItems": {
            "type": "integer",
            "description": "Total number of reward results (can be more than the amount of results in the response)."
          },
          "member": {
            "type": "array",
            "description": "List of reward results for this specific (paginated) request.",
            "items": {
              "$ref": "#/components/schemas/Reward"
            }
          },
          "facet": {
            "type": "object",
            "description": "Facet information for the requested facets.",
            "properties": {
              "categories": {
                "$ref": "#/components/schemas/Facet"
              },
              "owningCardSystemId": {
                "$ref": "#/components/schemas/Facet"
              },
              "type": {
                "$ref": "#/components/schemas/Facet"
              },
              "sport": {
                "$ref": "#/components/schemas/Facet"
              },
              "forKids": {
                "$ref": "#/components/schemas/Facet"
              },
              "online": {
                "$ref": "#/components/schemas/Facet"
              },
              "lastChance": {
                "$ref": "#/components/schemas/Facet"
              }
            }
          }
        }
      },
      "RedeemedRewardsPaginatedResponse": {
        "title": "RewardsPaginatedResponse",
        "type": "object",
        "x-tags": [
          "Models"
        ],
        "description": "Paginated response object for rewards",
        "properties": {
          "totalItems": {
            "type": "integer",
            "description": "Total number of redeemed reward results (can be more than the amount of results in the response)."
          },
          "member": {
            "type": "array",
            "description": "List of redeemed reward results for this specific (paginated) request.",
            "items": {
              "$ref": "#/components/schemas/RedeemedReward"
            }
          }
        }
      },
      "OrganizersPaginatedResponse": {
        "title": "OrganizersPaginatedResponse",
        "type": "object",
        "x-tags": [
          "Models"
        ],
        "description": "Paginated response object for organizers",
        "properties": {
          "totalItems": {
            "type": "integer",
            "description": "Total number of organizer results (can be more than the amount of results in the response)."
          },
          "member": {
            "type": "array",
            "description": "List of organizer results for this specific (paginated) request.",
            "items": {
              "$ref": "#/components/schemas/Organizer"
            }
          }
        }
      },
      "TicketSalesPaginatedResponse": {
        "title": "TicketSalesPaginatedResponse",
        "type": "object",
        "x-tags": [
          "Models"
        ],
        "description": "Paginated response object for ticket sales",
        "properties": {
          "totalItems": {
            "type": "integer",
            "description": "Total number of ticket sale results (can be more than the amount of results in the response)."
          },
          "member": {
            "type": "array",
            "description": "List of ticket sale results for this specific (paginated) request.",
            "items": {
              "$ref": "#/components/schemas/TicketSale"
            }
          }
        }
      },
      "Passholder": {
        "title": "Passholder",
        "type": "object",
        "x-tags": [
          "Models"
        ],
        "description": "Person who holds an UiTPAS, the end-user of an UiTPAS. \n\nA `Passholder` can be identified by its `id`. However, there are cases where the passholder identifies using one of its UiTPAS numbers. That number is CardSystem specific, so it can be found under `cardSystemMemberships`. Every passholder should have at least one cardsystem membership.",
        "example": {
          "id": "1be0fb53-0695-405b-ac09-deafead650af",
          "name": "Peeters",
          "firstName": "Marc",
          "inszNumber": "00000009007",
          "dateOfBirth": "2000-01-01",
          "postalCode": "9300",
          "address": {
            "postalCode": "9300",
            "city": "Aalst"
          },
          "creationDate": "2012-08-24T14:15:22Z",
          "registrationOrganizer": {
            "id": "1234",
            "name": "Example UiTPAS Organizer"
          },
          "points": 10,
          "uitidStatus": "UNREGISTERED",
          "cardSystemMemberships": [
            {
              "cardSystem": {
                "id": 1,
                "name": "UiTPAS Dender",
                "branding": {
                  "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
                  "primaryColor": "rgba(0,0,0,1.0)",
                  "secondaryColor": "rgba(97,166,14,1.0)"
                },
                "links": {
                  "website": "https://www.uitpas.be"
                },
                "cities": [
                  {
                    "postalCode": "9300",
                    "name": "Aalst"
                  },
                  {
                    "postalCode": "9400",
                    "name": "Ninove"
                  }
                ],
                "permanent": true
              },
              "uitpasNumber": "0930012345615",
              "status": "ACTIVE",
              "socialTariff": {
                "endDate": "2022-08-24T14:15:22Z",
                "inGracePeriod": false,
                "expired": false
              }
            }
          ]
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "This field is always available in responses.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Last name of the passholder."
          },
          "firstName": {
            "type": "string",
            "description": "First name of the passholder."
          },
          "inszNumber": {
            "type": "string",
            "description": "Unique national (Belgian) INSZ number of an individual passholder to look up."
          },
          "cardSystemMemberships": {
            "type": "array",
            "description": "This field is always available in responses.",
            "items": {
              "$ref": "#/components/schemas/CardSystemMembership"
            },
            "readOnly": true
          },
          "email": {
            "type": "string",
            "description": "Contact email address of the passholder. Not present for every passholder. Multiple passholders can have the same email address."
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "description": "This field is always available in responses.",
            "readOnly": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "description": "Date that the passholder was born."
          },
          "gender": {
            "type": "string",
            "enum": [
              "MALE",
              "FEMALE",
              "X"
            ],
            "description": "Gender of the passholder."
          },
          "registrationOrganizer": {
            "$ref": "#/components/schemas/Organizer"
          },
          "points": {
            "type": "integer",
            "description": "Amount of points the passholder has currently saved (and not used). This field is always available in responses.",
            "readOnly": true
          },
          "uitidStatus": {
            "type": "string",
            "enum": [
              "REGISTERED",
              "UNREGISTERED"
            ],
            "description": "Whether or not the passholder has a an UiTiD registered. This field is always available in responses.",
            "readOnly": true
          },
          "address": {
            "type": "object",
            "description": "Address that the passholder lives at. Always present in responses. Passholders living outside of Belgium (usually near the border) will only have a `postalCode` and `city` in their address.",
            "required": [
              "postalCode",
              "city"
            ],
            "properties": {
              "street": {
                "type": "string",
                "description": "Street name of the address."
              },
              "number": {
                "type": "string",
                "description": "House number."
              },
              "box": {
                "type": "string",
                "description": "Postal box number."
              },
              "postalCode": {
                "type": "string",
                "description": "Postal code of the municipality."
              },
              "city": {
                "type": "string",
                "description": "Human-readable name of the municipality."
              },
              "country": {
                "type": "string",
                "description": "ISO 3166-1 alpha-2 country code."
              }
            }
          },
          "postalCode": {
            "type": "string",
            "deprecated": true,
            "description": "Postal code of the municipality that the passholder lives in. Deprecated in favor of `address.postalCode`",
            "readOnly": true
          },
          "city": {
            "type": "string",
            "deprecated": true,
            "readOnly": true,
            "description": "Name of the municipality that the passholder lives in. Deprecated in favor of `address.city`."
          },
          "phoneNumber": {
            "type": "string",
            "description": "Phone number that the passholder has registered, for example for SMS alerts."
          },
          "optInPreferences": {
            "type": "object",
            "description": "Permissions that the passholder has given to be contacted.",
            "properties": {
              "serviceMails": {
                "type": "boolean",
                "description": "Important information about the functionality of UiTPAS."
              },
              "milestoneMails": {
                "type": "boolean",
                "description": "Notification when you reach an important UiTPAS milestone, for example a specific amount of points or an exclusive reward becomes available to you."
              },
              "infoMails": {
                "type": "boolean",
                "description": "Rewards, actions and events selected specifically for the passholder based on their UiTPAS history."
              },
              "sms": {
                "type": "boolean",
                "description": "Free (sporadic) SMS messages with rewards, actions and events selected specifically for the passholder based on their UiTPAS history."
              },
              "post": {
                "type": "boolean",
                "description": "Sporadic post mail with information about UiTPAS. Will be sent to the passholder's postal address."
              }
            },
            "required": [
              "serviceMails",
              "infoMails",
              "sms",
              "post",
              "milestoneMails"
            ]
          },
          "nationality": {
            "type": "string",
            "description": "Human-readable name of the passholder's nationality."
          },
          "parentalConsent": {
            "type": "boolean",
            "description": "Only used in passholder registration. Set to true for under-aged passholder that have parental consent.",
            "writeOnly": true
          },
          "legalTermsPaper": {
            "type": "boolean",
            "description": "Only used in passholder registration. Set to true for passholders that received legal terms on paper.",
            "writeOnly": true
          },
          "legalTermsDigital": {
            "type": "boolean",
            "description": "Only used in passholder registration. Set to true for passholders that received legal terms digitally.",
            "writeOnly": true
          },
          "registrationCardSystemId": {
            "type": "integer",
            "description": "Only used in passholder registration. Set to the id of the card system of which the passholder has to become a member.",
            "writeOnly": true
          }
        },
        "required": [
          "name",
          "firstName",
          "dateOfBirth",
          "registrationOrganizer",
          "address"
        ]
      },
      "PassholderSelfRegistration": {
        "title": "PassholderSelfRegistration",
        "type": "object",
        "example": {
          "name": "Lastname",
          "firstName": "Firstname",
          "cardSystem": {
            "id": 27
          },
          "email": "firstname.lastname@example.com",
          "dateOfBirth": "1980-01-01",
          "postalCode": "9000",
          "city": "Gent",
          "registrationOrganizer": {
            "id": "d2f898b1-455e-44ee-b08a-c4c05b1ab900"
          }
        },
        "properties": {
          "name": {
            "type": "string",
            "description": "Last name of the new passholder."
          },
          "firstName": {
            "type": "string",
            "description": "First name of the new passholder."
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "description": "Date that the new passholder was born."
          },
          "email": {
            "type": "string",
            "description": "Email address of the new passholder. Must be unique."
          },
          "postalCode": {
            "type": "string",
            "description": "Postal code of the Belgian municipality that the new passholder lives in."
          },
          "city": {
            "type": "string",
            "description": "Human-readable name of the Belgian municipality that the new passholder lives in."
          },
          "cardSystem": {
            "$ref": "#/components/schemas/CardSystem"
          },
          "registrationOrganizer": {
            "$ref": "#/components/schemas/Organizer"
          }
        },
        "required": [
          "name",
          "firstName",
          "dateOfBirth",
          "postalCode",
          "city",
          "cardSystem",
          "registrationOrganizer"
        ],
        "x-tags": [
          "Models"
        ]
      },
      "Pass": {
        "type": "object",
        "title": "Pass",
        "x-tags": [
          "Models"
        ],
        "description": "The `Pass` entity includes basic information about the UiTPAS and its related `Passholder`.  ",
        "example": {
          "passholderId": "b34c19fc-bcf9-4d10-aeb2-6bc9efd38b68",
          "uitpasNumber": "0560002524314",
          "firstName": "Jan",
          "points": 12,
          "postalCode": "1000",
          "socialTariff": {
            "status": "EXPIRED",
            "endDate": "2022-12-31T22:59:59"
          },
          "messages": [
            {
              "level": "WARN",
              "text": "Je sociaal tarief is verlopen. Contacteer je UiTPAS balie."
            }
          ]
        },
        "properties": {
          "passholderId": {
            "type": "string",
            "description": "ID of the passholder associated with this pass",
            "readOnly": true
          },
          "uitpasNumber": {
            "type": "string",
            "description": "UiTPAS number of this pass",
            "readOnly": true
          },
          "firstName": {
            "type": "string",
            "description": "First name of the passholder."
          },
          "points": {
            "type": "integer",
            "description": "Number of points of the passholder of this pass",
            "readOnly": true
          },
          "postalCode": {
            "type": "string",
            "description": "Postal code of the passholder of this pass",
            "readOnly": true
          },
          "socialTariff": {
            "type": "object",
            "description": "Information about the possible social tariff of the passholder. This object is always present, however a passholder is only entitled to social tariff if the `status` property has value `ACTIVE`.",
            "required": [
              "status"
            ],
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "EXPIRED",
                  "NONE"
                ],
                "description": "Status of the social tariff:\n- `ACTIVE`: the passholder is entitled to social tariff\n- `EXPIRED`: the passholder is NOT entitled to social tariff anymore\n- `NONE`: the passholder is NOT entitled to social tariff"
              },
              "endDate": {
                "type": "string",
                "format": "date-time",
                "description": "Exact expiration date of the passholder's entitlement to a social tariff. This property must not be used to determine the social tariff status, because `status` can be `ACTIVE` while the `endDate` is in the past during a 'grace period'. This property is not available when status is `NONE`.",
                "readOnly": true
              }
            }
          },
          "messages": {
            "type": "array",
            "description": "Message that, if present, must be displayed to the user",
            "items": {
              "type": "object",
              "properties": {
                "level": {
                  "type": "string",
                  "enum": [
                    "INFO",
                    "WARN",
                    "ERROR"
                  ],
                  "description": "Severity level of the message",
                  "readOnly": true
                },
                "text": {
                  "type": "string",
                  "description": "Actual text of the message to be displayed to the user"
                }
              },
              "required": [
                "level",
                "text"
              ]
            },
            "readOnly": true
          }
        },
        "required": [
          "passholderId",
          "uitpasNumber",
          "firstName",
          "points",
          "postalCode",
          "socialTariff"
        ],
        "readOnly": true
      },
      "CardSystemMembership": {
        "title": "CardSystemMembership",
        "description": "Membership info of an individual passholder in a specific card system.",
        "type": "object",
        "x-tags": [
          "Models"
        ],
        "properties": {
          "cardSystem": {
            "$ref": "#/components/schemas/CardSystem"
          },
          "uitpasNumber": {
            "type": "string",
            "description": "The UiTPAS number of the card that is linked to this card system membership. It is possible to have a CardSystemMembership without a card. However, a passholder always has at least one CardSystemMembership with a card."
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "BLOCKED"
            ],
            "description": "Whether the membership is active or blocked.",
            "readOnly": true
          },
          "socialTariff": {
            "type": "object",
            "description": "If the passholder has right to a social tariff, this object contains details like the end date.",
            "properties": {
              "endDate": {
                "type": "string",
                "format": "date-time",
                "description": "Exact moment that the passholder's right to a social tariff expires."
              },
              "inGracePeriod": {
                "type": "boolean",
                "description": "When the end date of the right to a social tariff has passed, the passholder may still be in a grace period that they can buy tickets at a social tariff until their right to a social tariff has been renewed."
              },
              "expired": {
                "type": "boolean",
                "description": "If true, the passholder's right to a social tariff has completely expired (the end date has passed and the passholder is no longer in a grace period)."
              }
            },
            "required": [
              "endDate"
            ]
          }
        },
        "required": [
          "cardSystem"
        ]
      },
      "CardSystem": {
        "title": "CardSystem",
        "description": "A region, usually one or multiple municipalities in Belgium, that uses UiTPAS and provides discounts and/or rewards. For example \"Paspartoe\" (Brussels), UiTPAS Leuven, UiTPAS Hasselt, UiTPAS Gent, and so on.",
        "type": "object",
        "x-tags": [
          "Models"
        ],
        "example": {
          "id": 1,
          "name": "UiTPAS Dender",
          "branding": {
            "logo": "https://www.uitpas.be/_nuxt/img/1351557.svg",
            "primaryColor": "rgba(0,0,0,1.0)",
            "secondaryColor": "rgba(97,166,14,1.0)"
          },
          "links": {
            "website": "https://www.uitpas.be"
          },
          "cities": [
            {
              "postalCode": "9300",
              "name": "Aalst"
            },
            {
              "postalCode": "9400",
              "name": "Ninove"
            }
          ],
          "permanent": true
        },
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the card system"
          },
          "name": {
            "type": "string",
            "description": "Name of the card system. This field is always available in responses."
          },
          "branding": {
            "type": "object",
            "description": "Branding information of the card system",
            "properties": {
              "logo": {
                "type": "string",
                "description": "URL to the logo of the card system"
              },
              "primaryColor": {
                "type": "string",
                "description": "Color code of the primary branding color."
              },
              "secondaryColor": {
                "type": "string",
                "description": "Color code of the secondary branding color."
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links of the card system",
            "properties": {
              "website": {
                "type": "string",
                "description": "URL of the website of the card system"
              }
            }
          },
          "cities": {
            "type": "array",
            "description": "List of cities that are part of this card system",
            "items": {
              "$ref": "#/components/schemas/City"
            }
          },
          "permanent": {
            "type": "boolean",
            "description": "Indicates whether this is a permanent card system"
          },
          "allowsCardlessRegistration": {
            "type": "boolean",
            "description": "Indicates whether this cardsystem allows online cardless registrations."
          }
        },
        "required": [
          "id"
        ]
      },
      "Report": {
        "type": "object",
        "title": "Report",
        "description": "The status of a report export.",
        "x-tags": [
          "Models"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "STARTED",
              "AVAILABLE",
              "FAILED"
            ],
            "description": "Whether the report has started (but not ready yet), is available for download, or failed to be created."
          },
          "id": {
            "type": "integer",
            "description": "Unique ID of the report export. Can be used to retrieve the status of the export."
          },
          "message": {
            "type": "string",
            "description": "Included if `status` is `FAILED`. Describes why it was not possible to export the report."
          },
          "period": {
            "$ref": "#/components/schemas/ReportPeriod"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date that the report export was initially requested."
          }
        },
        "required": [
          "status",
          "id",
          "creationDate"
        ]
      },
      "ReportPeriod": {
        "title": "ReportPeriod",
        "type": "object",
        "description": "Date range for which to export a list of financial transactions.",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "Minimum date of all transactions to include in the report. (Inclusive)"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "description": "Maximum date of all transactions to include in the report. (Inclusive)"
          }
        },
        "required": [
          "startDate",
          "endDate"
        ],
        "x-tags": [
          "Models"
        ]
      },
      "EventCardSystem": {
        "title": "EventCardSystem",
        "type": "object",
        "example": {
          "id": 1,
          "name": "UiTPAS Dender",
          "enabled": true,
          "manualDistributionKeys": [
            {
              "id": 123,
              "name": "€1,5 halve dag",
              "enabled": true
            }
          ]
        },
        "x-tags": [
          "Models"
        ],
        "description": "CardSystem in an event context, optionally including manual distributionKeys.\n\nThis model is only used in the GET and PUT `/events/{eventId}/card-systems` to configure the card systems and distribution keys for an event.\n\n<!-- theme: warning -->\n\n> **This model and corresponding endpoints are only needed for exceptional cases.** In most cases card systems and distribution keys are set automatically on events, so you don't need to retrieve or change them.\n",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the card system"
          },
          "name": {
            "type": "string",
            "description": "Name of the card system"
          },
          "enabled": {
            "type": "boolean",
            "description": "State of this card system for the event."
          },
          "manualDistributionKeys": {
            "type": "array",
            "description": "List of distribution keys, used to determine the price of discounted UiTPAS tariffs, which can be enabled or disabled manually for the event.",
            "items": {
              "type": "object",
              "description": "Distribution key that can be enabled or disabled manually for the related event.",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the manual distribution key."
                },
                "name": {
                  "type": "string",
                  "description": "Human-readable name of the distribution key."
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether the distribution key is enabled or not for this specific event."
                }
              },
              "required": [
                "id",
                "enabled"
              ]
            }
          }
        },
        "required": [
          "id",
          "enabled"
        ]
      },
      "TariffsResponse": {
        "title": "TariffsResponse",
        "description": "Response object for tariffs",
        "type": "object",
        "example": {
          "available": [
            {
              "id": "SOCIALTARIFF-1",
              "name": "UiTPAS Kansentarief",
              "price": 1.5,
              "type": "SOCIALTARIFF",
              "remaining": 1
            }
          ]
        },
        "properties": {
          "available": {
            "type": "array",
            "description": "List of available tariffs.",
            "items": {
              "$ref": "#/components/schemas/TariffAvailibility"
            }
          }
        },
        "x-tags": [
          "Models"
        ]
      },
      "TariffAvailibility": {
        "example": {
          "id": "COUPON5678",
          "name": "Cultuurbon 8 euro",
          "price": 2,
          "remaining": 1,
          "type": "COUPON"
        },
        "description": "The `TariffAvailibility` includes all information about the `Tariff`, which describes the discounted price a passholder has to pay for a given ticket, and the `remaining` number of tickets this passholder can buy for this event at this Tariff.",
        "title": "TariffAvailibility",
        "allOf": [
          {
            "$ref": "#/components/schemas/Tariff"
          },
          {
            "type": "object",
            "properties": {
              "remaining": {
                "type": "integer",
                "example": 1,
                "readOnly": true,
                "description": "Amount of tickets available at this price for this event, for the given passholder."
              }
            },
            "required": [
              "remaining"
            ]
          }
        ],
        "x-tags": [
          "Models"
        ]
      },
      "Period": {
        "title": "Period",
        "type": "object",
        "example": {
          "begin": "2019-08-24T14:15:22Z",
          "end": "2019-08-24T14:15:22Z"
        },
        "x-tags": [
          "Models"
        ],
        "description": "Period entity with a begin and optional end date.",
        "properties": {
          "begin": {
            "type": "string",
            "format": "date-time",
            "description": "Start date of the period (inclusive)."
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "description": "End date of the period (inclusive)."
          }
        },
        "required": [
          "begin"
        ]
      },
      "Reward": {
        "type": "object",
        "title": "Reward",
        "description": "Reward model",
        "x-tags": [
          "Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the reward",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "description": "Title of the reward"
          },
          "type": {
            "type": "string",
            "description": "Type of the reward",
            "enum": [
              "POINTS",
              "WELCOME"
            ]
          },
          "promotionalDescription": {
            "type": "string",
            "description": "Promotion description"
          },
          "publicationPeriod": {
            "$ref": "#/components/schemas/Period"
          },
          "points": {
            "type": "number",
            "description": "Number of points needed to redeem the reward. Required for reward of type POINTS."
          },
          "categories": {
            "type": "array",
            "description": "List of categories of this reward. Required for reward of type POINTS.",
            "items": {
              "type": "string",
              "enum": [
                "Eten en drinken",
                "Doen",
                "Gadget of item",
                "Goede doel"
              ]
            }
          },
          "moreInfoURL": {
            "type": "string",
            "description": "URL where a user can find more info about this reward. Required for reward of type POINTS.",
            "format": "uri"
          },
          "grantingPeriod": {
            "$ref": "#/components/schemas/Period"
          },
          "owningCardSystem": {
            "$ref": "#/components/schemas/CardSystem"
          },
          "applicableCardSystems": {
            "type": "array",
            "description": "List of CardSystems whose members can redeem this reward. ",
            "items": {
              "$ref": "#/components/schemas/CardSystem"
            }
          },
          "allCardSystems": {
            "type": "boolean",
            "description": "If set to true, `applicableCardSystems` will always contain all UiTPAS CardSystems.",
            "default": true
          },
          "organizers": {
            "type": "array",
            "description": "List of Organizers where this reward can be redeemed.",
            "items": {
              "$ref": "#/components/schemas/Organizer"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "DELETED"
            ],
            "description": "Status of this reward.",
            "readOnly": true
          },
          "maxAvailableUnits": {
            "type": "integer",
            "description": "Maximum (total) available units of this reward."
          },
          "unitsTaken": {
            "type": "integer",
            "description": "Number of rewards already redeemed.",
            "readOnly": true
          },
          "practicalInfo": {
            "type": "string",
            "description": "Practical info for passholders who want to redeem this reward."
          },
          "pictures": {
            "type": "array",
            "description": "List of URLs to zero or more images of this reward.",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "redeemPeriod": {
            "$ref": "#/components/schemas/Period"
          },
          "forKids": {
            "type": "boolean",
            "description": "true if this reward is specifically targetted to children."
          },
          "sport": {
            "type": "boolean",
            "description": "true if this is a sport reward"
          },
          "online": {
            "type": "boolean",
            "description": "true if this reward can be redeemed online"
          },
          "lastChance": {
            "type": "boolean",
            "description": "true if this rewards will not be redeemable anymore in the near future",
            "readOnly": true
          },
          "redeemConstraint": {
            "type": "object",
            "description": "Defines how many times this reward can be redeemed by the same passholder in a specific period.",
            "properties": {
              "volume": {
                "type": "integer",
                "description": "The maximum number of times this reward can be redeemed by the same passholder."
              },
              "period": {
                "type": "string",
                "description": "The calendar period this volume constraint applies to:\n- `ABSOLUTE`: the constraint applies to any period.\n- `DAY`: the constraint applies from 00:00 to 23:59\n- `WEEK`: the constraint applies from Monday 00:00 to Sunday 23:59\n- `MONTH`: the constraint applies from the first of the month at 00:00 to the last day of the month 23:59\n- `QUARTER`: this constraint applies to the first day of the quarter to the last day: January-March, April-June, July-September, October-December.\n- `YEAR`: from the Jan 1st to Dec 31st",
                "enum": [
                  "ABSOLUTE",
                  "DAY",
                  "WEEK",
                  "MONTH",
                  "QUARTER",
                  "YEAR"
                ]
              }
            },
            "required": [
              "volume",
              "period"
            ]
          }
        },
        "required": [
          "title",
          "type",
          "promotionalDescription",
          "publicationPeriod"
        ]
      },
      "RedeemedReward": {
        "type": "object",
        "title": "RedeemedReward",
        "x-tags": [
          "Models"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the redeemed reward."
          },
          "reward": {
            "$ref": "#/components/schemas/Reward"
          },
          "redeemDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date of the redeem action."
          },
          "redeemInfo": {
            "type": "object",
            "description": "Information about the redeem action.",
            "properties": {
              "text": {
                "type": "string",
                "description": "Text to show to the user who redeemed this reward."
              },
              "link": {
                "type": "string",
                "format": "uri",
                "description": "Link for a call-to-action for the redeemed reward."
              },
              "label": {
                "type": "string",
                "description": "Label for the call-to-action of the redeemed reward."
              }
            }
          },
          "redeemCode": {
            "type": "string",
            "description": "Redeem code to show to the user who redeemed this reward. (Only applicable to certain rewards that are configured in the UiTPAS Card System admin)"
          }
        },
        "required": [
          "id",
          "reward",
          "redeemDate"
        ]
      },
      "Facet": {
        "title": "Facet",
        "type": "object",
        "description": "Each property is a possible filter value, mapping to an object with a human-readable name and amount of results if the filter value is applied in combination with the other active filters.",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "name": {
              "type": "object",
              "description": "Internationalized human-readable name for the filter value.",
              "properties": {
                "nl": {
                  "type": "string",
                  "description": "Human-readable name for the filter value localized in Dutch."
                }
              }
            },
            "count": {
              "type": "integer",
              "description": "Amount of results if the filter is applied in combination with the other active filters."
            }
          },
          "required": [
            "name",
            "count"
          ]
        },
        "x-tags": [
          "Models"
        ],
        "example": {
          "option1": {
            "name": {
              "nl": "Option 1"
            },
            "count": 3
          },
          "option2": {
            "name": {
              "nl": "Option 2"
            },
            "count": 4
          }
        },
        "x-examples": {
          "Example": {
            "option1": {
              "name": {
                "nl": "Human-readable name for option1"
              },
              "count": 3
            },
            "option2": {
              "name": {
                "nl": "Human-readable name for option2"
              },
              "count": 4
            }
          }
        }
      },
      "CardSystemsPaginatedCollection": {
        "title": "CardSystemsPaginatedCollection",
        "type": "object",
        "x-tags": [
          "Models"
        ],
        "description": "Paginated response object for card systems",
        "properties": {
          "totalItems": {
            "type": "integer",
            "description": "Total number of card system results (can be more than the amount of results in the response)."
          },
          "member": {
            "type": "array",
            "description": "List of card system results for this specific (paginated) request.",
            "items": {
              "$ref": "#/components/schemas/CardSystem"
            }
          }
        }
      },
      "TransactionsPaginatedCollection": {
        "title": "TransactionsPaginatedCollection",
        "type": "object",
        "x-tags": [
          "Models"
        ],
        "description": "Paginated response object for transactions",
        "properties": {
          "totalItems": {
            "type": "integer",
            "description": "Total number of card system results (can be more than the amount of results in the response)."
          },
          "member": {
            "type": "array",
            "description": "List of card system results for this specific (paginated) request.",
            "items": {
              "$ref": "#/components/schemas/Transaction"
            }
          }
        }
      },
      "Transaction": {
        "type": "object",
        "title": "Transaction",
        "x-tags": [
          "Models"
        ],
        "description": "Transaction",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the transaction",
            "readOnly": true
          },
          "location": {
            "type": "string",
            "description": "Location of the transaction",
            "readOnly": true
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "description": "Creationdate of the transaction",
            "readOnly": true
          },
          "points": {
            "type": "number",
            "description": "Points of the transaction. Extra points (e.g. at check-in) are positive numbers. Used points (e.g. redeeming a reward) are negative numbers.",
            "readOnly": true
          }
        },
        "required": [
          "title",
          "location",
          "creationDate",
          "points"
        ],
        "readOnly": true
      },
      "City": {
        "title": "City",
        "type": "object",
        "x-tags": [
          "Models"
        ],
        "example": {
          "postalCode": "9300",
          "name": "Aalst"
        },
        "properties": {
          "postalCode": {
            "type": "string",
            "description": "Postalcode of the city"
          },
          "name": {
            "type": "string",
            "description": "Name of the city"
          }
        },
        "required": [
          "postalCode",
          "name"
        ]
      }
    },
    "securitySchemes": {
      "USER_ACCESS_TOKEN": {
        "type": "oauth2",
        "flows": {},
        "description": "A user access token, obtained by redirecting the end user to publiq's authorization server to login using the **Authorization Code OAuth Flow**. See the [authentication docs about user access tokens](https://docs.publiq.be/docs/authentication/methods/user-access-token) for more info."
      },
      "CLIENT_ACCESS_TOKEN": {
        "type": "oauth2",
        "flows": {},
        "description": "A client access token, obtained by exchanging your client id and client secret for a token via an HTTP request to publiq's authorization server using the **Client Credentials OAuth Flow**. See the [authentication docs about client access tokens](https://docs.publiq.be/docs/authentication/methods/client-access-token) for more info."
      },
      "CLIENT_IDENTIFICATION": {
        "name": "x-client-id",
        "type": "apiKey",
        "in": "header"
      }
    },
    "parameters": {
      "uitpasNumber": {
        "schema": {
          "type": "string"
        },
        "name": "uitpasNumber",
        "in": "path",
        "required": true,
        "description": "Unique UiTPAS number of a registered pass."
      },
      "inszNumber": {
        "schema": {
          "type": "string"
        },
        "name": "inszNumber",
        "in": "path",
        "required": true,
        "description": "Unique national (Belgian) INSZ number of an individual passholder to look up."
      },
      "chipNumber": {
        "schema": {
          "type": "string"
        },
        "name": "chipNumber",
        "in": "path",
        "required": true,
        "description": "Hexadecimal notation of the chip number of an individual UiTPAS card."
      },
      "passholderId": {
        "schema": {
          "type": "string"
        },
        "name": "passholderId",
        "in": "path",
        "description": "Unique ID of an UiTPAS passholder.",
        "required": true
      },
      "organizerId": {
        "schema": {
          "type": "string"
        },
        "name": "organizerId",
        "in": "path",
        "required": true,
        "description": "Unique ID of an UiTPAS organizer. (Same as its ID in UiTdatabank)"
      },
      "reportId": {
        "schema": {
          "type": "integer"
        },
        "name": "reportId",
        "in": "path",
        "required": true,
        "description": "Unique ID of the generated financial report."
      },
      "start": {
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "in": "query",
        "name": "start",
        "description": "Position to start returning results from. When set to `0` the results starting from the very first position will be returned. When set to for example `10` the results 0-9 will be skipped and the ones starting from position 10 will be returned. Can be used in combination with `limit` for pagination."
      },
      "limit": {
        "schema": {
          "type": "integer",
          "default": 20,
          "minimum": 0
        },
        "in": "query",
        "name": "limit",
        "description": "Maximum amount of results to return. Can be used in combination with `start` for pagination."
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Unauthorized. Your request is missing the required credentials to authenticate. See the Authentication documentation for more info.\n\n* type: https://api.publiq.be/probs/auth/unauthorized\n* detail: might contain a developer-readable explanation of the reason",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "x-examples": {
              "Unauthorized": {
                "value": {
                  "type": "https://api.publiq.be/probs/auth/unauthorized",
                  "title": "Unauthorized",
                  "status": 401
                }
              }
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden. Your request was successfully authenticated but you do not have permission to perform this particular request.\n\n* type: https://api.publiq.be/probs/auth/forbidden\n* detail: might contain a developer-readable explanation of the reason",
        "content": {
          "application/problem+json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "x-examples": {
              "Forbidden": {
                "value": {
                  "type": "https://api.publiq.be/probs/auth/forbidden",
                  "title": "Forbidden",
                  "status": 403,
                  "detail": "user must be admin of organiser abcd1234"
                }
              }
            }
          }
        }
      }
    },
    "requestBodies": {}
  }
}