/**
 * Generated by orval v6.12.0 üç∫
 * Do not edit manually.
 * Search API
 * With UiTdatabank's Search API you can search events, places and organizers.
 * OpenAPI spec version: 3.0
 */
import type { TextParameter } from './textParameter';
import type { QParameter } from './qParameter';
import type { PostalCodeParameter } from './postalCodeParameter';
import type { AddressCountryParameter } from './addressCountryParameter';
import type { MaxAgeParameter } from './maxAgeParameter';
import type { MinAgeParameter } from './minAgeParameter';
import type { AllAgesParameter } from './allAgesParameter';
import type { AudienceTypeParameter } from './audienceTypeParameter';
import type { AvailableFromParameter } from './availableFromParameter';
import type { AvailableToParameter } from './availableToParameter';
import type { AttendanceModeParameter } from './attendanceModeParameter';
import type { BookingAvailabilityParameter } from './bookingAvailabilityParameter';
import type { CalendarTypeParameter } from './calendarTypeParameter';
import type { CreatedFromParameter } from './createdFromParameter';
import type { CreatedToParameter } from './createdToParameter';
import type { ModifiedFromParameter } from './modifiedFromParameter';
import type { ModifiedToParameter } from './modifiedToParameter';
import type { ContributorsParameter } from './contributorsParameter';
import type { CreatorParameter } from './creatorParameter';
import type { DateFromParameter } from './dateFromParameter';
import type { DateToParameter } from './dateToParameter';
import type { LocalTimeFromParameter } from './localTimeFromParameter';
import type { LocalTimeToParameter } from './localTimeToParameter';
import type { EmbedParameter } from './embedParameter';
import type { EmbedCalendarSummariesParameter } from './embedCalendarSummariesParameter';
import type { EmbedUitpasPricesParameter } from './embedUitpasPricesParameter';
import type { FacetsParameter } from './facetsParameter';
import type { GroupByParameter } from './groupByParameter';
import type { RegionsParameter } from './regionsParameter';
import type { CoordinatesParameter } from './coordinatesParameter';
import type { DistanceParameter } from './distanceParameter';
import type { BoundsParameter } from './boundsParameter';
import type { IdParameter } from './idParameter';
import type { LocationIdParameter } from './locationIdParameter';
import type { OrganizerIdParameter } from './organizerIdParameter';
import type { LabelsParameter } from './labelsParameter';
import type { LocationLabelsParameter } from './locationLabelsParameter';
import type { OrganizerLabelsParameter } from './organizerLabelsParameter';
import type { MainLanguageParameter } from './mainLanguageParameter';
import type { LanguagesParameter } from './languagesParameter';
import type { CompletedLanguagesParameter } from './completedLanguagesParameter';
import type { HasMediaObjectsParameter } from './hasMediaObjectsParameter';
import type { PriceParameter } from './priceParameter';
import type { MinPriceParameter } from './minPriceParameter';
import type { MaxPriceParameter } from './maxPriceParameter';
import type { SortScoreParameter } from './sortScoreParameter';
import type { SortAvailableToParameter } from './sortAvailableToParameter';
import type { SortCreatedParameter } from './sortCreatedParameter';
import type { SortModifiedParameter } from './sortModifiedParameter';
import type { SortDistanceParameter } from './sortDistanceParameter';
import type { StatusParameter } from './statusParameter';
import type { TermIdsParameter } from './termIdsParameter';
import type { UitpasParameter } from './uitpasParameter';
import type { HasVideosParameter } from './hasVideosParameter';
import type { WorkflowStatusOfferParameter } from './workflowStatusOfferParameter';

export type GetEventsParams = { text?: TextParameter; q?: QParameter; postalCode?: PostalCodeParameter; addressCountry?: AddressCountryParameter; maxAge?: MaxAgeParameter; minAge?: MinAgeParameter; allAges?: AllAgesParameter; audienceType?: AudienceTypeParameter; availableFrom?: AvailableFromParameter; availableTo?: AvailableToParameter; attendanceMode?: AttendanceModeParameter; bookingAvailability?: BookingAvailabilityParameter; calendarType?: CalendarTypeParameter; createdFrom?: CreatedFromParameter; createdTo?: CreatedToParameter; modifiedFrom?: ModifiedFromParameter; modifiedTo?: ModifiedToParameter; contributors?: ContributorsParameter; creator?: CreatorParameter; dateFrom?: DateFromParameter; dateTo?: DateToParameter; localTimeFrom?: LocalTimeFromParameter; localTimeTo?: LocalTimeToParameter; embed?: EmbedParameter; 'embedCalendarSummaries[]'?: EmbedCalendarSummariesParameter; embedUitpasPrices?: EmbedUitpasPricesParameter; 'facets[]'?: FacetsParameter; groupBy?: GroupByParameter; 'regions[]'?: RegionsParameter; coordinates?: CoordinatesParameter; distance?: DistanceParameter; bounds?: BoundsParameter; id?: IdParameter; locationId?: LocationIdParameter; organizerId?: OrganizerIdParameter; 'labels[]'?: LabelsParameter; 'locationLabels[]'?: LocationLabelsParameter; 'organizerLabels[]'?: OrganizerLabelsParameter; mainLanguage?: MainLanguageParameter; 'languages[]'?: LanguagesParameter; 'completedLanguages[]'?: CompletedLanguagesParameter; hasMediaObjects?: HasMediaObjectsParameter; price?: PriceParameter; minPrice?: MinPriceParameter; maxPrice?: MaxPriceParameter; 'sort[score]'?: SortScoreParameter; 'sort[availableTo]'?: SortAvailableToParameter; 'sort[created]'?: SortCreatedParameter; 'sort[modified]'?: SortModifiedParameter; 'sort[distance]'?: SortDistanceParameter; status?: StatusParameter; 'termIds[]'?: TermIdsParameter; uitpas?: UitpasParameter; hasVideos?: HasVideosParameter; workflowStatus?: WorkflowStatusOfferParameter };
